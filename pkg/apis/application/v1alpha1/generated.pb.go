// This file was autogenerated by go-to-protobuf. Do not edit it manually!

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: github.com/argoproj/argo-cd/v2/pkg/apis/application/v1alpha1/generated.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	v12 "k8s.io/api/core/v1"
	v11 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	_ "k8s.io/apimachinery/pkg/runtime/schema"
	intstr "k8s.io/apimachinery/pkg/util/intstr"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AWSAuthConfig is an AWS IAM authentication configuration

func (x *AWSAuthConfig) Reset() {
	*x = AWSAuthConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AWSAuthConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSAuthConfig) ProtoMessage() {}

func (x *AWSAuthConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSAuthConfig.ProtoReflect.Descriptor instead.
func (*AWSAuthConfig) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{0}
}




// AppProject provides a logical grouping of applications, providing controls for:
// * where the apps may deploy to (cluster whitelist)
// * what may be deployed (repository whitelist, resource whitelist/blacklist)
// * who can access these applications (roles, OIDC group claims bindings)
// * and what they can do (RBAC policies)
// * automation access to these roles (JWT tokens)
// +genclient
// +genclient:noStatus
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:resource:path=appprojects,shortName=appproj;appprojs

func (x *AppProject) Reset() {
	*x = AppProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppProject) ProtoMessage() {}

func (x *AppProject) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppProject.ProtoReflect.Descriptor instead.
func (*AppProject) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{1}
}




// AppProjectList is list of AppProject resources
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

func (x *AppProjectList) Reset() {
	*x = AppProjectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppProjectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppProjectList) ProtoMessage() {}

func (x *AppProjectList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppProjectList.ProtoReflect.Descriptor instead.
func (*AppProjectList) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{2}
}



// AppProjectSpec is the specification of an AppProject

func (x *AppProjectSpec) Reset() {
	*x = AppProjectSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppProjectSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppProjectSpec) ProtoMessage() {}

func (x *AppProjectSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppProjectSpec.ProtoReflect.Descriptor instead.
func (*AppProjectSpec) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{3}
}















// AppProjectStatus contains status information for AppProject CRs

func (x *AppProjectStatus) Reset() {
	*x = AppProjectStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppProjectStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppProjectStatus) ProtoMessage() {}

func (x *AppProjectStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppProjectStatus.ProtoReflect.Descriptor instead.
func (*AppProjectStatus) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{4}
}


// Application is a definition of Application resource.
// +genclient
// +genclient:noStatus
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:resource:path=applications,shortName=app;apps
// +kubebuilder:printcolumn:name="Sync Status",type=string,JSONPath=`.status.sync.status`
// +kubebuilder:printcolumn:name="Health Status",type=string,JSONPath=`.status.health.status`
// +kubebuilder:printcolumn:name="Revision",type=string,JSONPath=`.status.sync.revision`,priority=10
// +kubebuilder:printcolumn:name="Project",type=string,JSONPath=`.spec.project`,priority=10

func (x *Application) Reset() {
	*x = Application{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{5}
}





// ApplicationCondition contains details about an application condition, which is usually an error or warning

func (x *ApplicationCondition) Reset() {
	*x = ApplicationCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCondition) ProtoMessage() {}

func (x *ApplicationCondition) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCondition.ProtoReflect.Descriptor instead.
func (*ApplicationCondition) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{6}
}




// ApplicationDestination holds information about the application's destination

func (x *ApplicationDestination) Reset() {
	*x = ApplicationDestination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationDestination) ProtoMessage() {}

func (x *ApplicationDestination) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationDestination.ProtoReflect.Descriptor instead.
func (*ApplicationDestination) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{7}
}




// ApplicationDestinationServiceAccount holds information about the service account to be impersonated for the application sync operation.

func (x *ApplicationDestinationServiceAccount) Reset() {
	*x = ApplicationDestinationServiceAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationDestinationServiceAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationDestinationServiceAccount) ProtoMessage() {}

func (x *ApplicationDestinationServiceAccount) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationDestinationServiceAccount.ProtoReflect.Descriptor instead.
func (*ApplicationDestinationServiceAccount) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{8}
}




// ApplicationList is list of Application resources
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

func (x *ApplicationList) Reset() {
	*x = ApplicationList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationList) ProtoMessage() {}

func (x *ApplicationList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationList.ProtoReflect.Descriptor instead.
func (*ApplicationList) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{9}
}




func (x *ApplicationMatchExpression) Reset() {
	*x = ApplicationMatchExpression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationMatchExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationMatchExpression) ProtoMessage() {}

func (x *ApplicationMatchExpression) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationMatchExpression.ProtoReflect.Descriptor instead.
func (*ApplicationMatchExpression) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{10}
}





func (x *ApplicationPreservedFields) Reset() {
	*x = ApplicationPreservedFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationPreservedFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationPreservedFields) ProtoMessage() {}

func (x *ApplicationPreservedFields) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationPreservedFields.ProtoReflect.Descriptor instead.
func (*ApplicationPreservedFields) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{11}
}



// ApplicationSet is a set of Application resources
// +genclient
// +genclient:noStatus
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:resource:path=applicationsets,shortName=appset;appsets
// +kubebuilder:subresource:status

func (x *ApplicationSet) Reset() {
	*x = ApplicationSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSet) ProtoMessage() {}

func (x *ApplicationSet) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSet.ProtoReflect.Descriptor instead.
func (*ApplicationSet) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{12}
}




// ApplicationSetApplicationStatus contains details about each Application managed by the ApplicationSet

func (x *ApplicationSetApplicationStatus) Reset() {
	*x = ApplicationSetApplicationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSetApplicationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSetApplicationStatus) ProtoMessage() {}

func (x *ApplicationSetApplicationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSetApplicationStatus.ProtoReflect.Descriptor instead.
func (*ApplicationSetApplicationStatus) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{13}
}







// ApplicationSetCondition contains details about an applicationset condition, which is usually an error or warning

func (x *ApplicationSetCondition) Reset() {
	*x = ApplicationSetCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSetCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSetCondition) ProtoMessage() {}

func (x *ApplicationSetCondition) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSetCondition.ProtoReflect.Descriptor instead.
func (*ApplicationSetCondition) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{14}
}






// ApplicationSetGenerator represents a generator at the top level of an ApplicationSet.

func (x *ApplicationSetGenerator) Reset() {
	*x = ApplicationSetGenerator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSetGenerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSetGenerator) ProtoMessage() {}

func (x *ApplicationSetGenerator) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSetGenerator.ProtoReflect.Descriptor instead.
func (*ApplicationSetGenerator) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{15}
}











// ApplicationSetList contains a list of ApplicationSet
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

func (x *ApplicationSetList) Reset() {
	*x = ApplicationSetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSetList) ProtoMessage() {}

func (x *ApplicationSetList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSetList.ProtoReflect.Descriptor instead.
func (*ApplicationSetList) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{16}
}



// ApplicationSetNestedGenerator represents a generator nested within a combination-type generator (MatrixGenerator or
// MergeGenerator).

func (x *ApplicationSetNestedGenerator) Reset() {
	*x = ApplicationSetNestedGenerator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSetNestedGenerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSetNestedGenerator) ProtoMessage() {}

func (x *ApplicationSetNestedGenerator) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSetNestedGenerator.ProtoReflect.Descriptor instead.
func (*ApplicationSetNestedGenerator) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{17}
}











// ApplicationSetResourceIgnoreDifferences configures how the ApplicationSet controller will ignore differences in live
// applications when applying changes from generated applications.

func (x *ApplicationSetResourceIgnoreDifferences) Reset() {
	*x = ApplicationSetResourceIgnoreDifferences{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSetResourceIgnoreDifferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSetResourceIgnoreDifferences) ProtoMessage() {}

func (x *ApplicationSetResourceIgnoreDifferences) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSetResourceIgnoreDifferences.ProtoReflect.Descriptor instead.
func (*ApplicationSetResourceIgnoreDifferences) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{18}
}





func (x *ApplicationSetRolloutStep) Reset() {
	*x = ApplicationSetRolloutStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSetRolloutStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSetRolloutStep) ProtoMessage() {}

func (x *ApplicationSetRolloutStep) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSetRolloutStep.ProtoReflect.Descriptor instead.
func (*ApplicationSetRolloutStep) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{19}
}




func (x *ApplicationSetRolloutStrategy) Reset() {
	*x = ApplicationSetRolloutStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSetRolloutStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSetRolloutStrategy) ProtoMessage() {}

func (x *ApplicationSetRolloutStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSetRolloutStrategy.ProtoReflect.Descriptor instead.
func (*ApplicationSetRolloutStrategy) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{20}
}


// ApplicationSetSpec represents a class of application set state.

func (x *ApplicationSetSpec) Reset() {
	*x = ApplicationSetSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSetSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSetSpec) ProtoMessage() {}

func (x *ApplicationSetSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSetSpec.ProtoReflect.Descriptor instead.
func (*ApplicationSetSpec) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{21}
}











// ApplicationSetStatus defines the observed state of ApplicationSet

func (x *ApplicationSetStatus) Reset() {
	*x = ApplicationSetStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSetStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSetStatus) ProtoMessage() {}

func (x *ApplicationSetStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSetStatus.ProtoReflect.Descriptor instead.
func (*ApplicationSetStatus) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{22}
}




// ApplicationSetStrategy configures how generated Applications are updated in sequence.

func (x *ApplicationSetStrategy) Reset() {
	*x = ApplicationSetStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSetStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSetStrategy) ProtoMessage() {}

func (x *ApplicationSetStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSetStrategy.ProtoReflect.Descriptor instead.
func (*ApplicationSetStrategy) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{23}
}



// ApplicationSetSyncPolicy configures how generated Applications will relate to their
// ApplicationSet.

func (x *ApplicationSetSyncPolicy) Reset() {
	*x = ApplicationSetSyncPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSetSyncPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSetSyncPolicy) ProtoMessage() {}

func (x *ApplicationSetSyncPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSetSyncPolicy.ProtoReflect.Descriptor instead.
func (*ApplicationSetSyncPolicy) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{24}
}



// ApplicationSetTemplate represents argocd ApplicationSpec

func (x *ApplicationSetTemplate) Reset() {
	*x = ApplicationSetTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSetTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSetTemplate) ProtoMessage() {}

func (x *ApplicationSetTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSetTemplate.ProtoReflect.Descriptor instead.
func (*ApplicationSetTemplate) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{25}
}



// ApplicationSetTemplateMeta represents the Argo CD application fields that may
// be used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)

func (x *ApplicationSetTemplateMeta) Reset() {
	*x = ApplicationSetTemplateMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSetTemplateMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSetTemplateMeta) ProtoMessage() {}

func (x *ApplicationSetTemplateMeta) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSetTemplateMeta.ProtoReflect.Descriptor instead.
func (*ApplicationSetTemplateMeta) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{26}
}






// ApplicationSetTerminalGenerator represents a generator nested within a nested generator (for example, a list within
// a merge within a matrix). A generator at this level may not be a combination-type generator (MatrixGenerator or
// MergeGenerator). ApplicationSet enforces this nesting depth limit because CRDs do not support recursive types.
// https://github.com/kubernetes-sigs/controller-tools/issues/477

func (x *ApplicationSetTerminalGenerator) Reset() {
	*x = ApplicationSetTerminalGenerator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSetTerminalGenerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSetTerminalGenerator) ProtoMessage() {}

func (x *ApplicationSetTerminalGenerator) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSetTerminalGenerator.ProtoReflect.Descriptor instead.
func (*ApplicationSetTerminalGenerator) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{27}
}









// ApplicationSetTree holds nodes which belongs to the application
// Used to build a tree of an ApplicationSet and its children

func (x *ApplicationSetTree) Reset() {
	*x = ApplicationSetTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSetTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSetTree) ProtoMessage() {}

func (x *ApplicationSetTree) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSetTree.ProtoReflect.Descriptor instead.
func (*ApplicationSetTree) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{28}
}


// ApplicationSource contains all required information about the source of an application

func (x *ApplicationSource) Reset() {
	*x = ApplicationSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSource) ProtoMessage() {}

func (x *ApplicationSource) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSource.ProtoReflect.Descriptor instead.
func (*ApplicationSource) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{29}
}










// ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet

func (x *ApplicationSourceDirectory) Reset() {
	*x = ApplicationSourceDirectory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSourceDirectory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSourceDirectory) ProtoMessage() {}

func (x *ApplicationSourceDirectory) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSourceDirectory.ProtoReflect.Descriptor instead.
func (*ApplicationSourceDirectory) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{30}
}





// ApplicationSourceHelm holds helm specific options

func (x *ApplicationSourceHelm) Reset() {
	*x = ApplicationSourceHelm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSourceHelm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSourceHelm) ProtoMessage() {}

func (x *ApplicationSourceHelm) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSourceHelm.ProtoReflect.Descriptor instead.
func (*ApplicationSourceHelm) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{31}
}














// ApplicationSourceJsonnet holds options specific to applications of type Jsonnet

func (x *ApplicationSourceJsonnet) Reset() {
	*x = ApplicationSourceJsonnet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSourceJsonnet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSourceJsonnet) ProtoMessage() {}

func (x *ApplicationSourceJsonnet) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSourceJsonnet.ProtoReflect.Descriptor instead.
func (*ApplicationSourceJsonnet) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{32}
}




// ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize

func (x *ApplicationSourceKustomize) Reset() {
	*x = ApplicationSourceKustomize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSourceKustomize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSourceKustomize) ProtoMessage() {}

func (x *ApplicationSourceKustomize) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSourceKustomize.ProtoReflect.Descriptor instead.
func (*ApplicationSourceKustomize) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{33}
}

















// ApplicationSourcePlugin holds options specific to config management plugins

func (x *ApplicationSourcePlugin) Reset() {
	*x = ApplicationSourcePlugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSourcePlugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSourcePlugin) ProtoMessage() {}

func (x *ApplicationSourcePlugin) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSourcePlugin.ProtoReflect.Descriptor instead.
func (*ApplicationSourcePlugin) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{34}
}





func (x *ApplicationSourcePluginParameter) Reset() {
	*x = ApplicationSourcePluginParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSourcePluginParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSourcePluginParameter) ProtoMessage() {}

func (x *ApplicationSourcePluginParameter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSourcePluginParameter.ProtoReflect.Descriptor instead.
func (*ApplicationSourcePluginParameter) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{35}
}





// ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.

func (x *ApplicationSpec) Reset() {
	*x = ApplicationSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSpec) ProtoMessage() {}

func (x *ApplicationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSpec.ProtoReflect.Descriptor instead.
func (*ApplicationSpec) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{36}
}









// ApplicationStatus contains status information for the application

func (x *ApplicationStatus) Reset() {
	*x = ApplicationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationStatus) ProtoMessage() {}

func (x *ApplicationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationStatus.ProtoReflect.Descriptor instead.
func (*ApplicationStatus) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{37}
}














// ApplicationSummary contains information about URLs and container images used by an application

func (x *ApplicationSummary) Reset() {
	*x = ApplicationSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSummary) ProtoMessage() {}

func (x *ApplicationSummary) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSummary.ProtoReflect.Descriptor instead.
func (*ApplicationSummary) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{38}
}



// ApplicationTree holds nodes which belongs to the application
// TODO: describe purpose of this type

func (x *ApplicationTree) Reset() {
	*x = ApplicationTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationTree) ProtoMessage() {}

func (x *ApplicationTree) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationTree.ProtoReflect.Descriptor instead.
func (*ApplicationTree) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{39}
}





// ApplicationWatchEvent contains information about application change.

func (x *ApplicationWatchEvent) Reset() {
	*x = ApplicationWatchEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationWatchEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationWatchEvent) ProtoMessage() {}

func (x *ApplicationWatchEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationWatchEvent.ProtoReflect.Descriptor instead.
func (*ApplicationWatchEvent) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{40}
}



// Backoff is the backoff strategy to use on subsequent retries for failing syncs

func (x *Backoff) Reset() {
	*x = Backoff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Backoff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Backoff) ProtoMessage() {}

func (x *Backoff) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Backoff.ProtoReflect.Descriptor instead.
func (*Backoff) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{41}
}




// BasicAuthBitbucketServer defines the username/(password or personal access token) for Basic auth.

func (x *BasicAuthBitbucketServer) Reset() {
	*x = BasicAuthBitbucketServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicAuthBitbucketServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicAuthBitbucketServer) ProtoMessage() {}

func (x *BasicAuthBitbucketServer) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicAuthBitbucketServer.ProtoReflect.Descriptor instead.
func (*BasicAuthBitbucketServer) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{42}
}



// BearerTokenBitbucket defines the Bearer token for BitBucket AppToken auth.

func (x *BearerTokenBitbucket) Reset() {
	*x = BearerTokenBitbucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BearerTokenBitbucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BearerTokenBitbucket) ProtoMessage() {}

func (x *BearerTokenBitbucket) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BearerTokenBitbucket.ProtoReflect.Descriptor instead.
func (*BearerTokenBitbucket) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{43}
}


// BearerTokenBitbucketCloud defines the Bearer token for BitBucket AppToken auth.

func (x *BearerTokenBitbucketCloud) Reset() {
	*x = BearerTokenBitbucketCloud{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BearerTokenBitbucketCloud) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BearerTokenBitbucketCloud) ProtoMessage() {}

func (x *BearerTokenBitbucketCloud) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BearerTokenBitbucketCloud.ProtoReflect.Descriptor instead.
func (*BearerTokenBitbucketCloud) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{44}
}


// ChartDetails contains helm chart metadata for a specific version

func (x *ChartDetails) Reset() {
	*x = ChartDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartDetails) ProtoMessage() {}

func (x *ChartDetails) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartDetails.ProtoReflect.Descriptor instead.
func (*ChartDetails) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{45}
}




// Cluster is the definition of a cluster resource

func (x *Cluster) Reset() {
	*x = Cluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{46}
}














// ClusterCacheInfo contains information about the cluster cache

func (x *ClusterCacheInfo) Reset() {
	*x = ClusterCacheInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterCacheInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterCacheInfo) ProtoMessage() {}

func (x *ClusterCacheInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterCacheInfo.ProtoReflect.Descriptor instead.
func (*ClusterCacheInfo) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{47}
}




// ClusterConfig is the configuration attributes. This structure is subset of the go-client
// rest.Config with annotations added for marshalling.

func (x *ClusterConfig) Reset() {
	*x = ClusterConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterConfig) ProtoMessage() {}

func (x *ClusterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterConfig.ProtoReflect.Descriptor instead.
func (*ClusterConfig) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{48}
}







// ClusterGenerator defines a generator to match against clusters registered with ArgoCD.

func (x *ClusterGenerator) Reset() {
	*x = ClusterGenerator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterGenerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterGenerator) ProtoMessage() {}

func (x *ClusterGenerator) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterGenerator.ProtoReflect.Descriptor instead.
func (*ClusterGenerator) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{49}
}




// ClusterInfo contains information about the cluster

func (x *ClusterInfo) Reset() {
	*x = ClusterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterInfo) ProtoMessage() {}

func (x *ClusterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterInfo.ProtoReflect.Descriptor instead.
func (*ClusterInfo) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{50}
}






// ClusterList is a collection of Clusters.

func (x *ClusterList) Reset() {
	*x = ClusterList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterList) ProtoMessage() {}

func (x *ClusterList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterList.ProtoReflect.Descriptor instead.
func (*ClusterList) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{51}
}



// Command holds binary path and arguments list

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{52}
}



// ComparedTo contains application source and target which was used for resources comparison

func (x *ComparedTo) Reset() {
	*x = ComparedTo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComparedTo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComparedTo) ProtoMessage() {}

func (x *ComparedTo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComparedTo.ProtoReflect.Descriptor instead.
func (*ComparedTo) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{53}
}





// ComponentParameter contains information about component parameter value

func (x *ComponentParameter) Reset() {
	*x = ComponentParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentParameter) ProtoMessage() {}

func (x *ComponentParameter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentParameter.ProtoReflect.Descriptor instead.
func (*ComponentParameter) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{54}
}




// ConfigManagementPlugin contains config management plugin configuration

func (x *ConfigManagementPlugin) Reset() {
	*x = ConfigManagementPlugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigManagementPlugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigManagementPlugin) ProtoMessage() {}

func (x *ConfigManagementPlugin) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigManagementPlugin.ProtoReflect.Descriptor instead.
func (*ConfigManagementPlugin) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{55}
}





// Utility struct for a reference to a configmap key.

func (x *ConfigMapKeyRef) Reset() {
	*x = ConfigMapKeyRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigMapKeyRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigMapKeyRef) ProtoMessage() {}

func (x *ConfigMapKeyRef) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigMapKeyRef.ProtoReflect.Descriptor instead.
func (*ConfigMapKeyRef) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{56}
}



// ConnectionState contains information about remote resource connection state, currently used for clusters and repositories

func (x *ConnectionState) Reset() {
	*x = ConnectionState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionState) ProtoMessage() {}

func (x *ConnectionState) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionState.ProtoReflect.Descriptor instead.
func (*ConnectionState) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{57}
}




// DuckType defines a generator to match against clusters registered with ArgoCD.

func (x *DuckTypeGenerator) Reset() {
	*x = DuckTypeGenerator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DuckTypeGenerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuckTypeGenerator) ProtoMessage() {}

func (x *DuckTypeGenerator) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuckTypeGenerator.ProtoReflect.Descriptor instead.
func (*DuckTypeGenerator) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{58}
}







// EnvEntry represents an entry in the application's environment

func (x *EnvEntry) Reset() {
	*x = EnvEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvEntry) ProtoMessage() {}

func (x *EnvEntry) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvEntry.ProtoReflect.Descriptor instead.
func (*EnvEntry) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{59}
}




func (x *ErrApplicationNotAllowedToUseProject) Reset() {
	*x = ErrApplicationNotAllowedToUseProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrApplicationNotAllowedToUseProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrApplicationNotAllowedToUseProject) ProtoMessage() {}

func (x *ErrApplicationNotAllowedToUseProject) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrApplicationNotAllowedToUseProject.ProtoReflect.Descriptor instead.
func (*ErrApplicationNotAllowedToUseProject) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{60}
}

// ExecProviderConfig is config used to call an external command to perform cluster authentication
// See: https://godoc.org/k8s.io/client-go/tools/clientcmd/api#ExecConfig

func (x *ExecProviderConfig) Reset() {
	*x = ExecProviderConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecProviderConfig) ProtoMessage() {}

func (x *ExecProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecProviderConfig.ProtoReflect.Descriptor instead.
func (*ExecProviderConfig) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{61}
}







func (x *GitDirectoryGeneratorItem) Reset() {
	*x = GitDirectoryGeneratorItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitDirectoryGeneratorItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitDirectoryGeneratorItem) ProtoMessage() {}

func (x *GitDirectoryGeneratorItem) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitDirectoryGeneratorItem.ProtoReflect.Descriptor instead.
func (*GitDirectoryGeneratorItem) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{62}
}




func (x *GitFileGeneratorItem) Reset() {
	*x = GitFileGeneratorItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitFileGeneratorItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitFileGeneratorItem) ProtoMessage() {}

func (x *GitFileGeneratorItem) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitFileGeneratorItem.ProtoReflect.Descriptor instead.
func (*GitFileGeneratorItem) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{63}
}



func (x *GitGenerator) Reset() {
	*x = GitGenerator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitGenerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitGenerator) ProtoMessage() {}

func (x *GitGenerator) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitGenerator.ProtoReflect.Descriptor instead.
func (*GitGenerator) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{64}
}









// GnuPGPublicKey is a representation of a GnuPG public key

func (x *GnuPGPublicKey) Reset() {
	*x = GnuPGPublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnuPGPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnuPGPublicKey) ProtoMessage() {}

func (x *GnuPGPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnuPGPublicKey.ProtoReflect.Descriptor instead.
func (*GnuPGPublicKey) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{65}
}







// GnuPGPublicKeyList is a collection of GnuPGPublicKey objects

func (x *GnuPGPublicKeyList) Reset() {
	*x = GnuPGPublicKeyList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnuPGPublicKeyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnuPGPublicKeyList) ProtoMessage() {}

func (x *GnuPGPublicKeyList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnuPGPublicKeyList.ProtoReflect.Descriptor instead.
func (*GnuPGPublicKeyList) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{66}
}



// HealthStatus contains information about the currently observed health state of an application or resource

func (x *HealthStatus) Reset() {
	*x = HealthStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthStatus) ProtoMessage() {}

func (x *HealthStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthStatus.ProtoReflect.Descriptor instead.
func (*HealthStatus) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{67}
}



// HelmFileParameter is a file parameter that's passed to helm template during manifest generation

func (x *HelmFileParameter) Reset() {
	*x = HelmFileParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelmFileParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmFileParameter) ProtoMessage() {}

func (x *HelmFileParameter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmFileParameter.ProtoReflect.Descriptor instead.
func (*HelmFileParameter) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{68}
}



// HelmOptions holds helm options

func (x *HelmOptions) Reset() {
	*x = HelmOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelmOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmOptions) ProtoMessage() {}

func (x *HelmOptions) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmOptions.ProtoReflect.Descriptor instead.
func (*HelmOptions) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{69}
}


// HelmParameter is a parameter that's passed to helm template during manifest generation

func (x *HelmParameter) Reset() {
	*x = HelmParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelmParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmParameter) ProtoMessage() {}

func (x *HelmParameter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmParameter.ProtoReflect.Descriptor instead.
func (*HelmParameter) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{70}
}




// HostInfo holds host name and resources metrics
// TODO: describe purpose of this type
// TODO: describe members of this type

func (x *HostInfo) Reset() {
	*x = HostInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfo) ProtoMessage() {}

func (x *HostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfo.ProtoReflect.Descriptor instead.
func (*HostInfo) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{71}
}




// TODO: describe this type

func (x *HostResourceInfo) Reset() {
	*x = HostResourceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostResourceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostResourceInfo) ProtoMessage() {}

func (x *HostResourceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostResourceInfo.ProtoReflect.Descriptor instead.
func (*HostResourceInfo) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{72}
}






func (x *Info) Reset() {
	*x = Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{73}
}



// InfoItem contains arbitrary, human readable information about an application

func (x *InfoItem) Reset() {
	*x = InfoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoItem) ProtoMessage() {}

func (x *InfoItem) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoItem.ProtoReflect.Descriptor instead.
func (*InfoItem) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{74}
}



// JWTToken holds the issuedAt and expiresAt values of a token

func (x *JWTToken) Reset() {
	*x = JWTToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JWTToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWTToken) ProtoMessage() {}

func (x *JWTToken) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWTToken.ProtoReflect.Descriptor instead.
func (*JWTToken) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{75}
}




// JWTTokens represents a list of JWT tokens

func (x *JWTTokens) Reset() {
	*x = JWTTokens{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JWTTokens) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWTTokens) ProtoMessage() {}

func (x *JWTTokens) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWTTokens.ProtoReflect.Descriptor instead.
func (*JWTTokens) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{76}
}


// JsonnetVar represents a variable to be passed to jsonnet during manifest generation

func (x *JsonnetVar) Reset() {
	*x = JsonnetVar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonnetVar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonnetVar) ProtoMessage() {}

func (x *JsonnetVar) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonnetVar.ProtoReflect.Descriptor instead.
func (*JsonnetVar) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{77}
}




// KnownTypeField contains mapping between CRD field and known Kubernetes type.
// This is mainly used for unit conversion in unknown resources (e.g. 0.1 == 100mi)
// TODO: Describe the members of this type

func (x *KnownTypeField) Reset() {
	*x = KnownTypeField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnownTypeField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnownTypeField) ProtoMessage() {}

func (x *KnownTypeField) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnownTypeField.ProtoReflect.Descriptor instead.
func (*KnownTypeField) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{78}
}




func (x *KustomizeGvk) Reset() {
	*x = KustomizeGvk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KustomizeGvk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KustomizeGvk) ProtoMessage() {}

func (x *KustomizeGvk) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KustomizeGvk.ProtoReflect.Descriptor instead.
func (*KustomizeGvk) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{79}
}




// KustomizeOptions are options for kustomize to use when building manifests

func (x *KustomizeOptions) Reset() {
	*x = KustomizeOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KustomizeOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KustomizeOptions) ProtoMessage() {}

func (x *KustomizeOptions) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KustomizeOptions.ProtoReflect.Descriptor instead.
func (*KustomizeOptions) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{80}
}




func (x *KustomizePatch) Reset() {
	*x = KustomizePatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KustomizePatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KustomizePatch) ProtoMessage() {}

func (x *KustomizePatch) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KustomizePatch.ProtoReflect.Descriptor instead.
func (*KustomizePatch) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{81}
}






func (x *KustomizeReplica) Reset() {
	*x = KustomizeReplica{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KustomizeReplica) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KustomizeReplica) ProtoMessage() {}

func (x *KustomizeReplica) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KustomizeReplica.ProtoReflect.Descriptor instead.
func (*KustomizeReplica) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{82}
}




func (x *KustomizeResId) Reset() {
	*x = KustomizeResId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KustomizeResId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KustomizeResId) ProtoMessage() {}

func (x *KustomizeResId) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KustomizeResId.ProtoReflect.Descriptor instead.
func (*KustomizeResId) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{83}
}





func (x *KustomizeSelector) Reset() {
	*x = KustomizeSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KustomizeSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KustomizeSelector) ProtoMessage() {}

func (x *KustomizeSelector) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KustomizeSelector.ProtoReflect.Descriptor instead.
func (*KustomizeSelector) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{84}
}




// ListGenerator include items info

func (x *ListGenerator) Reset() {
	*x = ListGenerator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGenerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGenerator) ProtoMessage() {}

func (x *ListGenerator) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGenerator.ProtoReflect.Descriptor instead.
func (*ListGenerator) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{85}
}





func (x *ManagedNamespaceMetadata) Reset() {
	*x = ManagedNamespaceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagedNamespaceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagedNamespaceMetadata) ProtoMessage() {}

func (x *ManagedNamespaceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagedNamespaceMetadata.ProtoReflect.Descriptor instead.
func (*ManagedNamespaceMetadata) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{86}
}



// MatrixGenerator generates the cartesian product of two sets of parameters. The parameters are defined by two nested
// generators.

func (x *MatrixGenerator) Reset() {
	*x = MatrixGenerator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatrixGenerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatrixGenerator) ProtoMessage() {}

func (x *MatrixGenerator) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatrixGenerator.ProtoReflect.Descriptor instead.
func (*MatrixGenerator) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{87}
}



// MergeGenerator merges the output of two or more generators. Where the values for all specified merge keys are equal
// between two sets of generated parameters, the parameter sets will be merged with the parameters from the latter
// generator taking precedence. Parameter sets with merge keys not present in the base generator's params will be
// ignored.
// For example, if the first generator produced [{a: '1', b: '2'}, {c: '1', d: '1'}] and the second generator produced
// [{'a': 'override'}], the united parameters for merge keys = ['a'] would be
// [{a: 'override', b: '1'}, {c: '1', d: '1'}].
//
// MergeGenerator supports template overriding. If a MergeGenerator is one of multiple top-level generators, its
// template will be merged with the top-level generator before the parameters are applied.

func (x *MergeGenerator) Reset() {
	*x = MergeGenerator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeGenerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeGenerator) ProtoMessage() {}

func (x *MergeGenerator) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeGenerator.ProtoReflect.Descriptor instead.
func (*MergeGenerator) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{88}
}




// NestedMatrixGenerator is a MatrixGenerator nested under another combination-type generator (MatrixGenerator or
// MergeGenerator). NestedMatrixGenerator does not have an override template, because template overriding has no meaning
// within the constituent generators of combination-type generators.
//
// NOTE: Nested matrix generator is not included directly in the CRD struct, instead it is included
// as a generic 'apiextensionsv1.JSON' object, and then marshalled into a NestedMatrixGenerator
// when processed.

func (x *NestedMatrixGenerator) Reset() {
	*x = NestedMatrixGenerator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedMatrixGenerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedMatrixGenerator) ProtoMessage() {}

func (x *NestedMatrixGenerator) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedMatrixGenerator.ProtoReflect.Descriptor instead.
func (*NestedMatrixGenerator) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{89}
}


// NestedMergeGenerator is a MergeGenerator nested under another combination-type generator (MatrixGenerator or
// MergeGenerator). NestedMergeGenerator does not have an override template, because template overriding has no meaning
// within the constituent generators of combination-type generators.
//
// NOTE: Nested merge generator is not included directly in the CRD struct, instead it is included
// as a generic 'apiextensionsv1.JSON' object, and then marshalled into a NestedMergeGenerator
// when processed.

func (x *NestedMergeGenerator) Reset() {
	*x = NestedMergeGenerator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedMergeGenerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedMergeGenerator) ProtoMessage() {}

func (x *NestedMergeGenerator) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedMergeGenerator.ProtoReflect.Descriptor instead.
func (*NestedMergeGenerator) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{90}
}



// Operation contains information about a requested or running operation

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{91}
}





// OperationInitiator contains information about the initiator of an operation

func (x *OperationInitiator) Reset() {
	*x = OperationInitiator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationInitiator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationInitiator) ProtoMessage() {}

func (x *OperationInitiator) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationInitiator.ProtoReflect.Descriptor instead.
func (*OperationInitiator) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{92}
}



// OperationState contains information about state of a running operation

func (x *OperationState) Reset() {
	*x = OperationState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationState) ProtoMessage() {}

func (x *OperationState) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationState.ProtoReflect.Descriptor instead.
func (*OperationState) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{93}
}









func (x *OptionalArray) Reset() {
	*x = OptionalArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionalArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionalArray) ProtoMessage() {}

func (x *OptionalArray) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionalArray.ProtoReflect.Descriptor instead.
func (*OptionalArray) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{94}
}



func (x *OptionalMap) Reset() {
	*x = OptionalMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionalMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionalMap) ProtoMessage() {}

func (x *OptionalMap) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionalMap.ProtoReflect.Descriptor instead.
func (*OptionalMap) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{95}
}


// OrphanedResourceKey is a reference to a resource to be ignored from

func (x *OrphanedResourceKey) Reset() {
	*x = OrphanedResourceKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrphanedResourceKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrphanedResourceKey) ProtoMessage() {}

func (x *OrphanedResourceKey) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrphanedResourceKey.ProtoReflect.Descriptor instead.
func (*OrphanedResourceKey) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{96}
}




// OrphanedResourcesMonitorSettings holds settings of orphaned resources monitoring

func (x *OrphanedResourcesMonitorSettings) Reset() {
	*x = OrphanedResourcesMonitorSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrphanedResourcesMonitorSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrphanedResourcesMonitorSettings) ProtoMessage() {}

func (x *OrphanedResourcesMonitorSettings) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrphanedResourcesMonitorSettings.ProtoReflect.Descriptor instead.
func (*OrphanedResourcesMonitorSettings) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{97}
}



// OverrideIgnoreDiff contains configurations about how fields should be ignored during diffs between
// the desired state and live state

func (x *OverrideIgnoreDiff) Reset() {
	*x = OverrideIgnoreDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverrideIgnoreDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverrideIgnoreDiff) ProtoMessage() {}

func (x *OverrideIgnoreDiff) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverrideIgnoreDiff.ProtoReflect.Descriptor instead.
func (*OverrideIgnoreDiff) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{98}
}





func (x *PluginConfigMapRef) Reset() {
	*x = PluginConfigMapRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginConfigMapRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginConfigMapRef) ProtoMessage() {}

func (x *PluginConfigMapRef) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginConfigMapRef.ProtoReflect.Descriptor instead.
func (*PluginConfigMapRef) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{99}
}


// PluginGenerator defines connection info specific to Plugin.

func (x *PluginGenerator) Reset() {
	*x = PluginGenerator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginGenerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginGenerator) ProtoMessage() {}

func (x *PluginGenerator) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginGenerator.ProtoReflect.Descriptor instead.
func (*PluginGenerator) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{100}
}







func (x *PluginInput) Reset() {
	*x = PluginInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginInput) ProtoMessage() {}

func (x *PluginInput) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginInput.ProtoReflect.Descriptor instead.
func (*PluginInput) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{101}
}


// ProjectRole represents a role that has access to a project

func (x *ProjectRole) Reset() {
	*x = ProjectRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectRole) ProtoMessage() {}

func (x *ProjectRole) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectRole.ProtoReflect.Descriptor instead.
func (*ProjectRole) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{102}
}






// PullRequestGenerator defines a generator that scrapes a PullRequest API to find candidate pull requests.

func (x *PullRequestGenerator) Reset() {
	*x = PullRequestGenerator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullRequestGenerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequestGenerator) ProtoMessage() {}

func (x *PullRequestGenerator) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequestGenerator.ProtoReflect.Descriptor instead.
func (*PullRequestGenerator) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{103}
}










// PullRequestGeneratorAzureDevOps defines connection info specific to AzureDevOps.

func (x *PullRequestGeneratorAzureDevOps) Reset() {
	*x = PullRequestGeneratorAzureDevOps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullRequestGeneratorAzureDevOps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequestGeneratorAzureDevOps) ProtoMessage() {}

func (x *PullRequestGeneratorAzureDevOps) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequestGeneratorAzureDevOps.ProtoReflect.Descriptor instead.
func (*PullRequestGeneratorAzureDevOps) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{104}
}







// PullRequestGeneratorBitbucket defines connection info specific to Bitbucket.

func (x *PullRequestGeneratorBitbucket) Reset() {
	*x = PullRequestGeneratorBitbucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullRequestGeneratorBitbucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequestGeneratorBitbucket) ProtoMessage() {}

func (x *PullRequestGeneratorBitbucket) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequestGeneratorBitbucket.ProtoReflect.Descriptor instead.
func (*PullRequestGeneratorBitbucket) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{105}
}






// PullRequestGeneratorBitbucketServer defines connection info specific to BitbucketServer.

func (x *PullRequestGeneratorBitbucketServer) Reset() {
	*x = PullRequestGeneratorBitbucketServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullRequestGeneratorBitbucketServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequestGeneratorBitbucketServer) ProtoMessage() {}

func (x *PullRequestGeneratorBitbucketServer) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequestGeneratorBitbucketServer.ProtoReflect.Descriptor instead.
func (*PullRequestGeneratorBitbucketServer) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{106}
}








// PullRequestGeneratorFilter is a single pull request filter.
// If multiple filter types are set on a single struct, they will be AND'd together. All filters must
// pass for a pull request to be included.

func (x *PullRequestGeneratorFilter) Reset() {
	*x = PullRequestGeneratorFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullRequestGeneratorFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequestGeneratorFilter) ProtoMessage() {}

func (x *PullRequestGeneratorFilter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequestGeneratorFilter.ProtoReflect.Descriptor instead.
func (*PullRequestGeneratorFilter) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{107}
}



// PullRequestGeneratorGitLab defines connection info specific to GitLab.

func (x *PullRequestGeneratorGitLab) Reset() {
	*x = PullRequestGeneratorGitLab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullRequestGeneratorGitLab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequestGeneratorGitLab) ProtoMessage() {}

func (x *PullRequestGeneratorGitLab) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequestGeneratorGitLab.ProtoReflect.Descriptor instead.
func (*PullRequestGeneratorGitLab) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{108}
}








// PullRequestGeneratorGitea defines connection info specific to Gitea.

func (x *PullRequestGeneratorGitea) Reset() {
	*x = PullRequestGeneratorGitea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullRequestGeneratorGitea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequestGeneratorGitea) ProtoMessage() {}

func (x *PullRequestGeneratorGitea) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequestGeneratorGitea.ProtoReflect.Descriptor instead.
func (*PullRequestGeneratorGitea) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{109}
}






// PullRequestGenerator defines connection info specific to GitHub.

func (x *PullRequestGeneratorGithub) Reset() {
	*x = PullRequestGeneratorGithub{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullRequestGeneratorGithub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequestGeneratorGithub) ProtoMessage() {}

func (x *PullRequestGeneratorGithub) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequestGeneratorGithub.ProtoReflect.Descriptor instead.
func (*PullRequestGeneratorGithub) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{110}
}








func (x *RefTarget) Reset() {
	*x = RefTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefTarget) ProtoMessage() {}

func (x *RefTarget) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefTarget.ProtoReflect.Descriptor instead.
func (*RefTarget) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{111}
}




// RepoCreds holds the definition for repository credentials

func (x *RepoCreds) Reset() {
	*x = RepoCreds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoCreds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoCreds) ProtoMessage() {}

func (x *RepoCreds) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoCreds.ProtoReflect.Descriptor instead.
func (*RepoCreds) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{112}
}

















// RepositoryList is a collection of Repositories.

func (x *RepoCredsList) Reset() {
	*x = RepoCredsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoCredsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoCredsList) ProtoMessage() {}

func (x *RepoCredsList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoCredsList.ProtoReflect.Descriptor instead.
func (*RepoCredsList) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{113}
}



// Repository is a repository holding application configurations

func (x *Repository) Reset() {
	*x = Repository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Repository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repository) ProtoMessage() {}

func (x *Repository) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repository.ProtoReflect.Descriptor instead.
func (*Repository) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{114}
}
























// A RepositoryCertificate is either SSH known hosts entry or TLS certificate

func (x *RepositoryCertificate) Reset() {
	*x = RepositoryCertificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepositoryCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryCertificate) ProtoMessage() {}

func (x *RepositoryCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryCertificate.ProtoReflect.Descriptor instead.
func (*RepositoryCertificate) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{115}
}






// RepositoryCertificateList is a collection of RepositoryCertificates

func (x *RepositoryCertificateList) Reset() {
	*x = RepositoryCertificateList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepositoryCertificateList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryCertificateList) ProtoMessage() {}

func (x *RepositoryCertificateList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryCertificateList.ProtoReflect.Descriptor instead.
func (*RepositoryCertificateList) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{116}
}



// RepositoryList is a collection of Repositories.

func (x *RepositoryList) Reset() {
	*x = RepositoryList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepositoryList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryList) ProtoMessage() {}

func (x *RepositoryList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryList.ProtoReflect.Descriptor instead.
func (*RepositoryList) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{117}
}



// TODO: describe this type
// TODO: describe members of this type

func (x *ResourceAction) Reset() {
	*x = ResourceAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceAction) ProtoMessage() {}

func (x *ResourceAction) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceAction.ProtoReflect.Descriptor instead.
func (*ResourceAction) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{118}
}






// TODO: describe this type
// TODO: describe members of this type

func (x *ResourceActionDefinition) Reset() {
	*x = ResourceActionDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceActionDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceActionDefinition) ProtoMessage() {}

func (x *ResourceActionDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceActionDefinition.ProtoReflect.Descriptor instead.
func (*ResourceActionDefinition) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{119}
}



// TODO: describe this type
// TODO: describe members of this type

func (x *ResourceActionParam) Reset() {
	*x = ResourceActionParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceActionParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceActionParam) ProtoMessage() {}

func (x *ResourceActionParam) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceActionParam.ProtoReflect.Descriptor instead.
func (*ResourceActionParam) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{120}
}





// TODO: describe this type
// TODO: describe members of this type

func (x *ResourceActions) Reset() {
	*x = ResourceActions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceActions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceActions) ProtoMessage() {}

func (x *ResourceActions) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceActions.ProtoReflect.Descriptor instead.
func (*ResourceActions) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{121}
}




// ResourceDiff holds the diff of a live and target resource object
// TODO: describe members of this type

func (x *ResourceDiff) Reset() {
	*x = ResourceDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceDiff) ProtoMessage() {}

func (x *ResourceDiff) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceDiff.ProtoReflect.Descriptor instead.
func (*ResourceDiff) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{122}
}













// ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.

func (x *ResourceIgnoreDifferences) Reset() {
	*x = ResourceIgnoreDifferences{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceIgnoreDifferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceIgnoreDifferences) ProtoMessage() {}

func (x *ResourceIgnoreDifferences) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceIgnoreDifferences.ProtoReflect.Descriptor instead.
func (*ResourceIgnoreDifferences) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{123}
}








// ResourceNetworkingInfo holds networking resource related information
// TODO: describe members of this type

func (x *ResourceNetworkingInfo) Reset() {
	*x = ResourceNetworkingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceNetworkingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceNetworkingInfo) ProtoMessage() {}

func (x *ResourceNetworkingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceNetworkingInfo.ProtoReflect.Descriptor instead.
func (*ResourceNetworkingInfo) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{124}
}






// ResourceNode contains information about live resource and its children
// TODO: describe members of this type

func (x *ResourceNode) Reset() {
	*x = ResourceNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceNode) ProtoMessage() {}

func (x *ResourceNode) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceNode.ProtoReflect.Descriptor instead.
func (*ResourceNode) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{125}
}









// ResourceOverride holds configuration to customize resource diffing and health assessment
// TODO: describe the members of this type

func (x *ResourceOverride) Reset() {
	*x = ResourceOverride{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceOverride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceOverride) ProtoMessage() {}

func (x *ResourceOverride) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceOverride.ProtoReflect.Descriptor instead.
func (*ResourceOverride) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{126}
}







// ResourceRef includes fields which uniquely identify a resource

func (x *ResourceRef) Reset() {
	*x = ResourceRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRef) ProtoMessage() {}

func (x *ResourceRef) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRef.ProtoReflect.Descriptor instead.
func (*ResourceRef) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{127}
}







// ResourceResult holds the operation result details of a specific resource

func (x *ResourceResult) Reset() {
	*x = ResourceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceResult) ProtoMessage() {}

func (x *ResourceResult) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceResult.ProtoReflect.Descriptor instead.
func (*ResourceResult) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{128}
}











// ResourceStatus holds the current sync and health status of a resource
// TODO: describe members of this type

func (x *ResourceStatus) Reset() {
	*x = ResourceStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceStatus) ProtoMessage() {}

func (x *ResourceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceStatus.ProtoReflect.Descriptor instead.
func (*ResourceStatus) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{129}
}











// RetryStrategy contains information about the strategy to apply when a sync failed

func (x *RetryStrategy) Reset() {
	*x = RetryStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetryStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryStrategy) ProtoMessage() {}

func (x *RetryStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryStrategy.ProtoReflect.Descriptor instead.
func (*RetryStrategy) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{130}
}



// RevisionHistory contains history information about a previous sync

func (x *RevisionHistory) Reset() {
	*x = RevisionHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevisionHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevisionHistory) ProtoMessage() {}

func (x *RevisionHistory) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevisionHistory.ProtoReflect.Descriptor instead.
func (*RevisionHistory) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{131}
}









// RevisionMetadata contains metadata for a specific revision in a Git repository

func (x *RevisionMetadata) Reset() {
	*x = RevisionMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevisionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevisionMetadata) ProtoMessage() {}

func (x *RevisionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevisionMetadata.ProtoReflect.Descriptor instead.
func (*RevisionMetadata) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{132}
}






// SCMProviderGenerator defines a generator that scrapes a SCMaaS API to find candidate repos.

func (x *SCMProviderGenerator) Reset() {
	*x = SCMProviderGenerator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMProviderGenerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMProviderGenerator) ProtoMessage() {}

func (x *SCMProviderGenerator) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMProviderGenerator.ProtoReflect.Descriptor instead.
func (*SCMProviderGenerator) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{133}
}













// SCMProviderGeneratorAWSCodeCommit defines connection info specific to AWS CodeCommit.

func (x *SCMProviderGeneratorAWSCodeCommit) Reset() {
	*x = SCMProviderGeneratorAWSCodeCommit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMProviderGeneratorAWSCodeCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMProviderGeneratorAWSCodeCommit) ProtoMessage() {}

func (x *SCMProviderGeneratorAWSCodeCommit) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMProviderGeneratorAWSCodeCommit.ProtoReflect.Descriptor instead.
func (*SCMProviderGeneratorAWSCodeCommit) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{134}
}





// SCMProviderGeneratorAzureDevOps defines connection info specific to Azure DevOps.

func (x *SCMProviderGeneratorAzureDevOps) Reset() {
	*x = SCMProviderGeneratorAzureDevOps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMProviderGeneratorAzureDevOps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMProviderGeneratorAzureDevOps) ProtoMessage() {}

func (x *SCMProviderGeneratorAzureDevOps) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMProviderGeneratorAzureDevOps.ProtoReflect.Descriptor instead.
func (*SCMProviderGeneratorAzureDevOps) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{135}
}






// SCMProviderGeneratorBitbucket defines connection info specific to Bitbucket Cloud (API version 2).

func (x *SCMProviderGeneratorBitbucket) Reset() {
	*x = SCMProviderGeneratorBitbucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMProviderGeneratorBitbucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMProviderGeneratorBitbucket) ProtoMessage() {}

func (x *SCMProviderGeneratorBitbucket) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMProviderGeneratorBitbucket.ProtoReflect.Descriptor instead.
func (*SCMProviderGeneratorBitbucket) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{136}
}





// SCMProviderGeneratorBitbucketServer defines connection info specific to Bitbucket Server.

func (x *SCMProviderGeneratorBitbucketServer) Reset() {
	*x = SCMProviderGeneratorBitbucketServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMProviderGeneratorBitbucketServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMProviderGeneratorBitbucketServer) ProtoMessage() {}

func (x *SCMProviderGeneratorBitbucketServer) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMProviderGeneratorBitbucketServer.ProtoReflect.Descriptor instead.
func (*SCMProviderGeneratorBitbucketServer) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{137}
}








// SCMProviderGeneratorFilter is a single repository filter.
// If multiple filter types are set on a single struct, they will be AND'd together. All filters must
// pass for a repo to be included.

func (x *SCMProviderGeneratorFilter) Reset() {
	*x = SCMProviderGeneratorFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMProviderGeneratorFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMProviderGeneratorFilter) ProtoMessage() {}

func (x *SCMProviderGeneratorFilter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMProviderGeneratorFilter.ProtoReflect.Descriptor instead.
func (*SCMProviderGeneratorFilter) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{138}
}






// SCMProviderGeneratorGitea defines a connection info specific to Gitea.

func (x *SCMProviderGeneratorGitea) Reset() {
	*x = SCMProviderGeneratorGitea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMProviderGeneratorGitea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMProviderGeneratorGitea) ProtoMessage() {}

func (x *SCMProviderGeneratorGitea) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMProviderGeneratorGitea.ProtoReflect.Descriptor instead.
func (*SCMProviderGeneratorGitea) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{139}
}






// SCMProviderGeneratorGithub defines connection info specific to GitHub.

func (x *SCMProviderGeneratorGithub) Reset() {
	*x = SCMProviderGeneratorGithub{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMProviderGeneratorGithub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMProviderGeneratorGithub) ProtoMessage() {}

func (x *SCMProviderGeneratorGithub) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMProviderGeneratorGithub.ProtoReflect.Descriptor instead.
func (*SCMProviderGeneratorGithub) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{140}
}






// SCMProviderGeneratorGitlab defines connection info specific to Gitlab.

func (x *SCMProviderGeneratorGitlab) Reset() {
	*x = SCMProviderGeneratorGitlab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMProviderGeneratorGitlab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMProviderGeneratorGitlab) ProtoMessage() {}

func (x *SCMProviderGeneratorGitlab) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMProviderGeneratorGitlab.ProtoReflect.Descriptor instead.
func (*SCMProviderGeneratorGitlab) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{141}
}










// Utility struct for a reference to a secret key.

func (x *SecretRef) Reset() {
	*x = SecretRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretRef) ProtoMessage() {}

func (x *SecretRef) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretRef.ProtoReflect.Descriptor instead.
func (*SecretRef) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{142}
}



// SignatureKey is the specification of a key required to verify commit signatures with

func (x *SignatureKey) Reset() {
	*x = SignatureKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureKey) ProtoMessage() {}

func (x *SignatureKey) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureKey.ProtoReflect.Descriptor instead.
func (*SignatureKey) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{143}
}


// SyncOperation contains details about a sync operation.

func (x *SyncOperation) Reset() {
	*x = SyncOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncOperation) ProtoMessage() {}

func (x *SyncOperation) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncOperation.ProtoReflect.Descriptor instead.
func (*SyncOperation) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{144}
}











// SyncOperationResource contains resources to sync.

func (x *SyncOperationResource) Reset() {
	*x = SyncOperationResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncOperationResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncOperationResource) ProtoMessage() {}

func (x *SyncOperationResource) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncOperationResource.ProtoReflect.Descriptor instead.
func (*SyncOperationResource) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{145}
}





// SyncOperationResult represent result of sync operation

func (x *SyncOperationResult) Reset() {
	*x = SyncOperationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncOperationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncOperationResult) ProtoMessage() {}

func (x *SyncOperationResult) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncOperationResult.ProtoReflect.Descriptor instead.
func (*SyncOperationResult) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{146}
}







// SyncPolicy controls when a sync will be performed in response to updates in git

func (x *SyncPolicy) Reset() {
	*x = SyncPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPolicy) ProtoMessage() {}

func (x *SyncPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPolicy.ProtoReflect.Descriptor instead.
func (*SyncPolicy) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{147}
}





// SyncPolicyAutomated controls the behavior of an automated sync

func (x *SyncPolicyAutomated) Reset() {
	*x = SyncPolicyAutomated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncPolicyAutomated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPolicyAutomated) ProtoMessage() {}

func (x *SyncPolicyAutomated) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPolicyAutomated.ProtoReflect.Descriptor instead.
func (*SyncPolicyAutomated) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{148}
}




// SyncStatus contains information about the currently observed live and desired states of an application

func (x *SyncStatus) Reset() {
	*x = SyncStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStatus) ProtoMessage() {}

func (x *SyncStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStatus.ProtoReflect.Descriptor instead.
func (*SyncStatus) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{149}
}





// SyncStrategy controls the manner in which a sync is performed

func (x *SyncStrategy) Reset() {
	*x = SyncStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStrategy) ProtoMessage() {}

func (x *SyncStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStrategy.ProtoReflect.Descriptor instead.
func (*SyncStrategy) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{150}
}



// SyncStrategyApply uses `kubectl apply` to perform the apply

func (x *SyncStrategyApply) Reset() {
	*x = SyncStrategyApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncStrategyApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStrategyApply) ProtoMessage() {}

func (x *SyncStrategyApply) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStrategyApply.ProtoReflect.Descriptor instead.
func (*SyncStrategyApply) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{151}
}


// SyncStrategyHook will perform a sync using hooks annotations.
// If no hook annotation is specified falls back to `kubectl apply`.

func (x *SyncStrategyHook) Reset() {
	*x = SyncStrategyHook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncStrategyHook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStrategyHook) ProtoMessage() {}

func (x *SyncStrategyHook) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStrategyHook.ProtoReflect.Descriptor instead.
func (*SyncStrategyHook) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{152}
}


// SyncWindow contains the kind, time, duration and attributes that are used to assign the syncWindows to apps

func (x *SyncWindow) Reset() {
	*x = SyncWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncWindow) ProtoMessage() {}

func (x *SyncWindow) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncWindow.ProtoReflect.Descriptor instead.
func (*SyncWindow) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{153}
}









// TLSClientConfig contains settings to enable transport layer security

func (x *TLSClientConfig) Reset() {
	*x = TLSClientConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSClientConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSClientConfig) ProtoMessage() {}

func (x *TLSClientConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSClientConfig.ProtoReflect.Descriptor instead.
func (*TLSClientConfig) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{154}
}







func (x *TagFilter) Reset() {
	*x = TagFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagFilter) ProtoMessage() {}

func (x *TagFilter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagFilter.ProtoReflect.Descriptor instead.
func (*TagFilter) Descriptor() ([]byte, []int) {
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{155}
}



var File_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto protoreflect.FileDescriptor

var file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDesc = []byte{
	0x0a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2f, 0x61, 0x72, 0x67, 0x6f, 0x2d, 0x63, 0x64, 0x2f, 0x76, 0x32,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x3c,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x22, 0x6b, 0x38,
	0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x48, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x6b, 0x38, 0x73, 0x2e,
	0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2f, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x72, 0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x36, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x6b, 0x38, 0x73, 0x2e, 0x69,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x69, 0x6e, 0x74, 0x73, 0x74, 0x72, 0x2f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65,
	0x0a, 0x0d, 0x41, 0x57, 0x53, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x52, 0x4e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x52, 0x4e, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xa4, 0x02, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x4c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e,
	0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x60, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76,
	0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x12, 0x66, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f,
	0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xbc, 0x01, 0x0a,
	0x0e, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x4a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5e, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xf3, 0x0a, 0x0a, 0x0e,
	0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x12, 0x78, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f,
	0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x6b, 0x0a,
	0x18, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x69, 0x6e, 0x64,
	0x52, 0x18, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x6f, 0x0a, 0x1a, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x69, 0x6e, 0x64, 0x52,
	0x1a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x8c, 0x01, 0x0a, 0x11,
	0x6f, 0x72, 0x70, 0x68, 0x61, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x72, 0x70, 0x68, 0x61, 0x6e, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x11, 0x6f, 0x72, 0x70, 0x68, 0x61, 0x6e, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x6a, 0x0a, 0x0b, 0x73, 0x79,
	0x6e, 0x63, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x12, 0x6f, 0x0a, 0x1a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x38, 0x73,
	0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x1a, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x70, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x6b, 0x0a, 0x18, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x38,
	0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72,
	0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x18, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x12, 0x48, 0x0a, 0x1f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x4f, 0x6e, 0x6c, 0x79,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x64, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0xa2, 0x01, 0x0a,
	0x1a, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x62, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e,
	0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x1a, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x22, 0xb0, 0x02, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x8d, 0x01, 0x0a, 0x0f, 0x6a, 0x77, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x63, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76,
	0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x4a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x6a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x1a, 0x8b, 0x01, 0x0a, 0x14, 0x4a, 0x77, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x5d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76,
	0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4a, 0x57, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x8e, 0x03, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e,
	0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x61, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76,
	0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x67, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x65,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e,
	0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa0, 0x01, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5a, 0x0a, 0x12,
	0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69,
	0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x92, 0x01, 0x0a,
	0x24, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xbe, 0x01, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x5f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76,
	0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x62, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x56, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0xb0,
	0x02, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x12, 0x4c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x64, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x6a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x8f, 0x02, 0x0a, 0x1f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5a, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x12, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0xd3, 0x01, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5a, 0x0a,
	0x12, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e,
	0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xbf, 0x08, 0x0a, 0x17, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x5f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63,
	0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x5c, 0x0a, 0x03, 0x67, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x69, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x67, 0x69, 0x74,
	0x12, 0x74, 0x0a, 0x0b, 0x73, 0x63, 0x6d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x43, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x73, 0x63, 0x6d, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x89, 0x01, 0x0a, 0x17, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x75, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x17, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x74, 0x0a, 0x0b, 0x70, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x70, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x65, 0x0a, 0x06, 0x6d, 0x61, 0x74, 0x72,
	0x69, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x12,
	0x62, 0x0a, 0x05, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x65,
	0x72, 0x67, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x05, 0x6d, 0x65,
	0x72, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61,
	0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x65, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f,
	0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x22, 0xc4, 0x01, 0x0a, 0x12,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x4a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x62,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0xa8, 0x08, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x5f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64,
	0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x5c, 0x0a, 0x03, 0x67, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x69,
	0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x03, 0x67, 0x69, 0x74, 0x12,
	0x74, 0x0a, 0x0b, 0x73, 0x63, 0x6d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f,
	0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x53, 0x43, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x73, 0x63, 0x6d, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x89, 0x01, 0x0a, 0x17, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x75, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x17, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x74, 0x0a, 0x0b, 0x70, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x70, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x06, 0x6d, 0x61, 0x74, 0x72, 0x69,
	0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61,
	0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x06, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x12,
	0x54, 0x0a, 0x05, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e,
	0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x05,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x65, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x22, 0x8f, 0x01,
	0x0a, 0x27, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44, 0x69,
	0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x6a, 0x73, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x73, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6a, 0x71, 0x50, 0x61, 0x74, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x6a, 0x71,
	0x50, 0x61, 0x74, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xf2, 0x01, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x53, 0x74, 0x65, 0x70, 0x12, 0x84, 0x01,
	0x0a, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4e, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x73, 0x74, 0x72, 0x2e, 0x49, 0x6e,
	0x74, 0x4f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x6d, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x53, 0x74, 0x65, 0x70, 0x52, 0x05,
	0x73, 0x74, 0x65, 0x70, 0x73, 0x22, 0xc0, 0x07, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1e, 0x0a, 0x0a,
	0x67, 0x6f, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x67, 0x6f, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x75, 0x0a, 0x0a,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x55, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76,
	0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x12, 0x70, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x76, 0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x70, 0x0a,
	0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x54, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12,
	0x82, 0x01, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x67, 0x6f, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x11, 0x67, 0x6f, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0xa9, 0x01, 0x0a, 0x1c, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x66, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x65, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x1c, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x74, 0x63, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x22, 0x87, 0x03, 0x0a, 0x14, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x75, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x8b, 0x01, 0x0a, 0x11, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x5d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f,
	0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x6a, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x7d, 0x0a, 0x0b, 0x72, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x6e, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x52, 0x0b, 0x72, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x6e, 0x63,
	0x22, 0x88, 0x01, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x40, 0x0a,
	0x1b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x4f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x4f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53,
	0x79, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x22, 0xf1, 0x01, 0x0a, 0x16,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x74, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x61, 0x0a, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22,
	0xf5, 0x03, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x7c, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x64, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76,
	0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x8b,
	0x01, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f,
	0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x41,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x73, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfc, 0x06, 0x0a, 0x1f, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x5f, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x08,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x5c, 0x0a, 0x03, 0x67, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x69, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x03, 0x67, 0x69, 0x74, 0x12, 0x74, 0x0a, 0x0b, 0x73, 0x63, 0x6d, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f,
	0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x43, 0x4d, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x0b, 0x73, 0x63, 0x6d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x89, 0x01, 0x0a,
	0x17, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x75,
	0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x17, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x74, 0x0a, 0x0b, 0x70, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x0b, 0x70, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x65,
	0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x4f, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x76, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x12, 0x60, 0x0a, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f,
	0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xd9,
	0x04, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x55, 0x52, 0x4c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x55, 0x52, 0x4c, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x67, 0x0a, 0x04, 0x68, 0x65,
	0x6c, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x04, 0x68,
	0x65, 0x6c, 0x6d, 0x12, 0x76, 0x0a, 0x09, 0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x52, 0x09, 0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x12, 0x76, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x58,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x6d, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63,
	0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0xdc, 0x01, 0x0a, 0x1a, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63,
	0x75, 0x72, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x63, 0x75,
	0x72, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x6e, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f,
	0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x6e, 0x65, 0x74, 0x52, 0x07, 0x6a, 0x73,
	0x6f, 0x6e, 0x6e, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x22, 0xa6, 0x05, 0x0a, 0x15, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48,
	0x65, 0x6c, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x6b, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x48, 0x65, 0x6c, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x77, 0x0a, 0x0e, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64,
	0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x48, 0x65, 0x6c, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a,
	0x0f, 0x70, 0x61, 0x73, 0x73, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x70, 0x61, 0x73, 0x73, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x70, 0x43, 0x72, 0x64, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x70, 0x43, 0x72, 0x64, 0x73, 0x12, 0x51, 0x0a,
	0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x52, 0x61, 0x77, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x6b, 0x75, 0x62, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x75, 0x62, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0xf0, 0x01, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x6e, 0x65, 0x74, 0x12,
	0x62, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x56, 0x61, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76,
	0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4a, 0x73, 0x6f, 0x6e, 0x6e, 0x65, 0x74, 0x56, 0x61, 0x72, 0x52, 0x07, 0x65, 0x78, 0x74, 0x56,
	0x61, 0x72, 0x73, 0x12, 0x5c, 0x0a, 0x04, 0x74, 0x6c, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e,
	0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x6e, 0x65, 0x74, 0x56, 0x61, 0x72, 0x52, 0x04, 0x74, 0x6c, 0x61,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x62, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x69, 0x62, 0x73, 0x22, 0xf4, 0x08, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x75, 0x66, 0x66,
	0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x75,
	0x66, 0x66, 0x69, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x8e, 0x01, 0x0a,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x6a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63,
	0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x9d, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x6f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63,
	0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x76, 0x73, 0x75, 0x62, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x76, 0x73, 0x75, 0x62, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x08, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f,
	0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4b, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x52, 0x08, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x66, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x07, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x0a,
	0x14, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6b, 0x75, 0x62, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x75, 0x62, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3f, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x44, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x87, 0x02, 0x0a,
	0x17, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x58, 0x0a, 0x03,
	0x65, 0x6e, 0x76, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x7e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5e, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0x8e, 0x02, 0x0a, 0x20, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x5b, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f,
	0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4d, 0x61, 0x70, 0x52,
	0x03, 0x6d, 0x61, 0x70, 0x12, 0x61, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63,
	0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x22, 0xf5, 0x05, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x12, 0x67, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f,
	0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x68, 0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x85, 0x01, 0x0a, 0x11, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x66, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x11, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x66,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x32, 0x0a, 0x14, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x69, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22,
	0xc4, 0x08, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x6a, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x5c, 0x0a, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x12,
	0x62, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x12, 0x67, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f,
	0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x72, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76,
	0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x4e, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e,
	0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x74, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x0a, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73,
	0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0a, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x6a, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63,
	0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x32,
	0x0a, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x50, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0xe5, 0x02, 0x0a, 0x0f, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x12, 0x60, 0x0a, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f,
	0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x70,
	0x0a, 0x0d, 0x6f, 0x72, 0x70, 0x68, 0x61, 0x6e, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x0d, 0x6f, 0x72, 0x70, 0x68, 0x61, 0x6e, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x5c, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x98, 0x01, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x6b,
	0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63,
	0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x07, 0x42,
	0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61,
	0x78, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6d, 0x61, 0x78, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa1, 0x01, 0x0a,
	0x18, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x42, 0x69, 0x74, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x69, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x66, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x66,
	0x22, 0x7b, 0x0a, 0x14, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x63, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x66, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x22, 0x80, 0x01,
	0x0a, 0x19, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x69, 0x74,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x63, 0x0a, 0x08, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66,
	0x22, 0x66, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x69,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x22, 0xd0, 0x07, 0x0a, 0x07, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x63, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76,
	0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x77, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x12, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x12, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x5d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x69, 0x0a, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f,
	0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x78, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f,
	0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb2, 0x01, 0x0a, 0x10,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x70, 0x69,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x58, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x11, 0x6c,
	0x61, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xd8, 0x03, 0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x65,
	0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x77, 0x0a, 0x0f,
	0x74, 0x6c, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x4c, 0x53, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x0f, 0x74, 0x6c, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x71, 0x0a, 0x0d, 0x61, 0x77, 0x73, 0x41, 0x75, 0x74, 0x68,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x41,
	0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x61, 0x77, 0x73, 0x41, 0x75,
	0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x80, 0x01, 0x0a, 0x12, 0x65, 0x78, 0x65,
	0x63, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x12, 0x65, 0x78, 0x65, 0x63, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x84, 0x03, 0x0a, 0x10,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x4f, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x70, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63,
	0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x72, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63,
	0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xea, 0x02, 0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x77, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f,
	0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x6c, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f,
	0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x2c, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xb6, 0x01, 0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x4a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5b, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x37, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x22, 0xe0, 0x03, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x64, 0x54, 0x6f,
	0x12, 0x67, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76,
	0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x69, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64,
	0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x85, 0x01, 0x0a,
	0x11, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x52, 0x11, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x22, 0x5c, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x86, 0x02, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x59, 0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x61, 0x0a, 0x08,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x08, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x22, 0x49, 0x0a, 0x0f, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x66, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x91, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x0b,
	0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0b, 0x61,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xfa, 0x03, 0x0a, 0x11, 0x44,
	0x75, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x66,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61,
	0x70, 0x52, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x59, 0x0a, 0x0d, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x70, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x73, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x75, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x0b,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x34, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x26, 0x0a,
	0x24, 0x45, 0x72, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x6f, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xa9, 0x02, 0x0a, 0x12, 0x45, 0x78, 0x65, 0x63, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x6b, 0x0a, 0x03, 0x65, 0x6e,
	0x76, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x48, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x48, 0x69, 0x6e, 0x74, 0x1a, 0x36, 0x0a, 0x08, 0x45, 0x6e, 0x76,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x49, 0x0a, 0x19, 0x47, 0x69, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x22, 0x2a, 0x0a, 0x14,
	0x47, 0x69, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0xa2, 0x05, 0x0a, 0x0c, 0x47, 0x69, 0x74,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70,
	0x6f, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f,
	0x55, 0x52, 0x4c, 0x12, 0x79, 0x0a, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x69, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x68,
	0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x52, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x69, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x70, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x74, 0x68,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x61, 0x74, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x6e, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x56, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64,
	0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x47, 0x69, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa8, 0x01,
	0x0a, 0x0e, 0x47, 0x6e, 0x75, 0x50, 0x47, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6b, 0x65, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x72, 0x75, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0xc4, 0x01, 0x0a, 0x12, 0x47, 0x6e, 0x75,
	0x50, 0x47, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x4a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x62, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x6e, 0x75, 0x50, 0x47, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x40, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x3b, 0x0a, 0x11, 0x48, 0x65, 0x6c, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x3b,
	0x0a, 0x0b, 0x48, 0x65, 0x6c, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a,
	0x11, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x22, 0x5b, 0x0a, 0x0d, 0x48,
	0x65, 0x6c, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0xd8, 0x01, 0x0a, 0x08, 0x48, 0x6f, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x74, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76,
	0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x42, 0x0a, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xae, 0x01, 0x0a, 0x10, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x41, 0x70, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x41, 0x70, 0x70, 0x12, 0x32, 0x0a, 0x14, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x14, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x22, 0x30, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x08, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x08,
	0x4a, 0x57, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x69, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x09,
	0x4a, 0x57, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x5c, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4a, 0x57, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x4a, 0x0a, 0x0a, 0x4a, 0x73, 0x6f, 0x6e, 0x6e,
	0x65, 0x74, 0x56, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x3a, 0x0a, 0x0e, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x52, 0x0a, 0x0c, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x47, 0x76, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x22, 0x56, 0x0a, 0x10, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x50, 0x61, 0x74, 0x68, 0x22, 0xd4, 0x02, 0x0a, 0x0e,
	0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x67, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x73, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x59, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64,
	0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x6e, 0x0a, 0x10, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6b, 0x38, 0x73, 0x2e,
	0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x69, 0x6e, 0x74, 0x73, 0x74, 0x72, 0x2e,
	0x49, 0x6e, 0x74, 0x4f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x0e, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65,
	0x52, 0x65, 0x73, 0x49, 0x64, 0x12, 0x5c, 0x0a, 0x03, 0x67, 0x76, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64,
	0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x47, 0x76, 0x6b, 0x52, 0x03,
	0x67, 0x76, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x11, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x62, 0x0a, 0x05, 0x72,
	0x65, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x49, 0x64, 0x52, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x12, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x81, 0x02, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x5a, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6b, 0x38, 0x73, 0x2e,
	0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x70, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x59, 0x61, 0x6d, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x59, 0x61, 0x6d, 0x6c, 0x22, 0x9d, 0x03, 0x0a, 0x18, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x7a, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x62, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x89, 0x01, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x67, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x39,
	0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x80, 0x02, 0x0a, 0x0f, 0x4d, 0x61,
	0x74, 0x72, 0x69, 0x78, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x7b, 0x0a,
	0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x5b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e,
	0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x4e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0a,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x70, 0x0a, 0x08, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x9d, 0x02, 0x0a,
	0x0e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x7b, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63,
	0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x70, 0x0a, 0x08, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x96, 0x01, 0x0a,
	0x15, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x7d, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5d, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x14, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x72, 0x67, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x7d,
	0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x5d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64,
	0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x9b, 0x03, 0x0a, 0x09,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x04, 0x73, 0x79, 0x6e,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x72, 0x0a, 0x0b, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x50, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x56,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x61, 0x0a, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x52, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x22, 0x4e, 0x0a, 0x12, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x22, 0xd0, 0x03, 0x0a, 0x0e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x65, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x71, 0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x48, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e,
	0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x4a, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x25, 0x0a, 0x0d,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x72,
	0x72, 0x61, 0x79, 0x22, 0xab, 0x01, 0x0a, 0x0b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x4d, 0x61, 0x70, 0x12, 0x64, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76,
	0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4d, 0x61, 0x70, 0x2e, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x1a, 0x36, 0x0a, 0x08, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x53, 0x0a, 0x13, 0x4f, 0x72, 0x70, 0x68, 0x61, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x20, 0x4f, 0x72, 0x70, 0x68, 0x61,
	0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x77,
	0x61, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x77, 0x61, 0x72, 0x6e, 0x12,
	0x69, 0x0a, 0x06, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x51, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f,
	0x72, 0x70, 0x68, 0x61, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b,
	0x65, 0x79, 0x52, 0x06, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x12, 0x4f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x66,
	0x66, 0x12, 0x22, 0x0a, 0x0c, 0x6a, 0x53, 0x4f, 0x4e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x53, 0x4f, 0x4e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6a, 0x71, 0x50, 0x61, 0x74, 0x68, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x11, 0x6a, 0x71, 0x50, 0x61, 0x74, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x15, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x22, 0x28, 0x0a, 0x12, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x66, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0xba, 0x04, 0x0a, 0x0f, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x74, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x66, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x66, 0x12, 0x5f, 0x0a,
	0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x30,
	0x0a, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x12, 0x70, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x54, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64,
	0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x12, 0x71, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x59, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64,
	0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x87, 0x02, 0x0a, 0x0b, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x79, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f,
	0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x7d, 0x0a, 0x0f, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x54, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3e, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x53, 0x4f, 0x4e, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xdd, 0x01, 0x0a, 0x0b, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x64, 0x0a, 0x09,
	0x6a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4a,
	0x57, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x09, 0x6a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x8b, 0x08, 0x0a, 0x14, 0x50,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x70, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63,
	0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x52, 0x06, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x12, 0x70, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x47, 0x69, 0x74, 0x4c, 0x61, 0x62, 0x52,
	0x06, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x12, 0x6d, 0x0a, 0x05, 0x67, 0x69, 0x74, 0x65, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x47, 0x69, 0x74, 0x65, 0x61, 0x52,
	0x05, 0x67, 0x69, 0x74, 0x65, 0x61, 0x12, 0x8b, 0x01, 0x0a, 0x0f, 0x62, 0x69, 0x74, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76,
	0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x0f, 0x62, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x72, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x70, 0x0a, 0x08, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x79, 0x0a, 0x09,
	0x62, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x5b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x42, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x09, 0x62, 0x69,
	0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x7f, 0x0a, 0x0b, 0x61, 0x7a, 0x75, 0x72, 0x65,
	0x64, 0x65, 0x76, 0x6f, 0x70, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5d, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x65, 0x76, 0x4f, 0x70, 0x73, 0x52, 0x0b, 0x61, 0x7a, 0x75,
	0x72, 0x65, 0x64, 0x65, 0x76, 0x6f, 0x70, 0x73, 0x22, 0x82, 0x02, 0x0a, 0x1f, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x65, 0x76, 0x4f, 0x70, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65,
	0x70, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69,
	0x12, 0x63, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64,
	0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x52, 0x08, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0xcc, 0x02,
	0x0a, 0x1d, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x74, 0x0a, 0x09, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x56,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x42, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x79, 0x0a, 0x0b, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x42, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52,
	0x0b, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd2, 0x03, 0x0a,
	0x23, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65,
	0x70, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x61, 0x70, 0x69, 0x12, 0x74, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68,
	0x42, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x12, 0x74, 0x0a, 0x0b, 0x62, 0x65,
	0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x42,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x69, 0x74, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x0b, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12, 0x63, 0x0a, 0x05,
	0x63, 0x61, 0x52, 0x65, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f,
	0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4d, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x66, 0x52, 0x05, 0x63, 0x61, 0x52, 0x65,
	0x66, 0x22, 0x6c, 0x0a, 0x1a, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x22,
	0xf2, 0x02, 0x0a, 0x1a, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x47, 0x69, 0x74, 0x4c, 0x61, 0x62, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x63, 0x0a, 0x08, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x66, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x75, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x70, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12,
	0x63, 0x0a, 0x05, 0x63, 0x61, 0x52, 0x65, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x66, 0x52, 0x05, 0x63,
	0x61, 0x52, 0x65, 0x66, 0x22, 0xd8, 0x01, 0x0a, 0x19, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x47, 0x69, 0x74,
	0x65, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x70, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x63,
	0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76,
	0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x22,
	0xfb, 0x01, 0x0a, 0x1a, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x63, 0x0a, 0x08, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x66, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0xa7, 0x01,
	0x0a, 0x09, 0x52, 0x65, 0x66, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x5c, 0x0a, 0x04, 0x72,
	0x65, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x68, 0x61, 0x72, 0x74, 0x22, 0xe9, 0x04, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6f,
	0x43, 0x72, 0x65, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x73, 0x68, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x73, 0x68, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x6c, 0x73, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x74, 0x6c, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6c, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x65, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74,
	0x6c, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x30, 0x0a, 0x13, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x17, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x3e, 0x0a,
	0x1a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x43, 0x49, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x43, 0x49, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x32, 0x0a, 0x14, 0x67, 0x63, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x67,
	0x63, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x48, 0x74, 0x74, 0x70, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x48, 0x74, 0x74, 0x70,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x22, 0xba, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x43, 0x72, 0x65, 0x64,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x5d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76,
	0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x43, 0x72, 0x65, 0x64, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0xab, 0x07, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x65, 0x70, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73,
	0x73, 0x68, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x73, 0x68, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x77, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x69, 0x6e,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x48, 0x6f, 0x73, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x6e, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x4b, 0x65, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x66, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x66, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x6c,
	0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x6c, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6c, 0x73, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x74, 0x6c, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x65, 0x64, 0x43,
	0x72, 0x65, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x43,
	0x49, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4f,
	0x43, 0x49, 0x12, 0x30, 0x0a, 0x13, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x17, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x3e, 0x0a, 0x1a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x32, 0x0a, 0x14, 0x67, 0x63, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x67, 0x63, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x48, 0x74, 0x74,
	0x70, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x48, 0x74, 0x74, 0x70, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x22, 0xad,
	0x01, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x53, 0x75, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x53,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd2,
	0x01, 0x0a, 0x19, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x69, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69,
	0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x5e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e,
	0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0xeb, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x69, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x4c, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x75, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x75, 0x61, 0x22, 0x6d,
	0x0a, 0x13, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0xed, 0x01,
	0x0a, 0x0f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x4c, 0x75, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x75,
	0x61, 0x12, 0x78, 0x0a, 0x0b, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x6d,
	0x65, 0x72, 0x67, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x42,
	0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xfa, 0x02,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x69, 0x66, 0x66, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69,
	0x66, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x69, 0x66, 0x66, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x68, 0x6f,
	0x6f, 0x6b, 0x12, 0x30, 0x0a, 0x13, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65,
	0x64, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0xff, 0x01, 0x0a, 0x19, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x66,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6a, 0x73, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x73, 0x6f, 0x6e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6a, 0x71, 0x50, 0x61,
	0x74, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x11, 0x6a, 0x71, 0x50, 0x61, 0x74, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x22, 0xed, 0x04, 0x0a,
	0x16, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x8a, 0x01, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x66,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x69, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65,
	0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x66, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x66, 0x73, 0x12,
	0x78, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x60, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x41, 0x0a, 0x07, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6b, 0x38, 0x73,
	0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x49, 0x6e, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x73,
	0x1a, 0x3f, 0x0a, 0x11, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb0, 0x05, 0x0a,
	0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x6b, 0x0a,
	0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64,
	0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x0b, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x69, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x66, 0x73, 0x12, 0x5a, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63,
	0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x7c, 0x0a, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x62, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e,
	0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x48, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69,
	0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xed, 0x03, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4c, 0x75,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4c,
	0x75, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x4c, 0x69, 0x62,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x6e,
	0x4c, 0x69, 0x62, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x7e,
	0x0a, 0x11, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x66, 0x66, 0x52, 0x11, 0x69, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x86,
	0x01, 0x0a, 0x15, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x66, 0x66,
	0x52, 0x15, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x76, 0x0a, 0x0f, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76,
	0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0f,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22,
	0x95, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x90, 0x02, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x68, 0x6f, 0x6f, 0x6b, 0x50, 0x68, 0x61, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x68, 0x6f, 0x6f, 0x6b, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x79, 0x6e, 0x63, 0x50, 0x68, 0x61, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x68, 0x61, 0x73, 0x65, 0x22, 0xdc, 0x02, 0x0a, 0x0e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x62, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f,
	0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x68,
	0x6f, 0x6f, 0x6b, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x50,
	0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x79, 0x6e, 0x63, 0x57, 0x61, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x73, 0x79, 0x6e, 0x63, 0x57, 0x61, 0x76, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x0d, 0x52, 0x65,
	0x74, 0x72, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x5f, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64,
	0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x6f,
	0x66, 0x66, 0x22, 0xc5, 0x04, 0x0a, 0x0f, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e,
	0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x41, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x67,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0f, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x69, 0x0a,
	0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x72, 0x0a, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f,
	0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0xbe, 0x01, 0x0a, 0x10, 0x52,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61,
	0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xec, 0x0a, 0x0a, 0x14,
	0x53, 0x43, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x70, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f,
	0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x53, 0x43, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x52, 0x06,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x12, 0x70, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x43, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x47, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x52, 0x06, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x12, 0x79, 0x0a, 0x09, 0x62, 0x69, 0x74, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f,
	0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x43, 0x4d, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x42,
	0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x09, 0x62, 0x69, 0x74, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x8b, 0x01, 0x0a, 0x0f, 0x62, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x43, 0x4d,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x42, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x0f, 0x62, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x6d, 0x0a, 0x05, 0x67, 0x69, 0x74, 0x65, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76,
	0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x53, 0x43, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x47, 0x69, 0x74, 0x65, 0x61, 0x52, 0x05, 0x67, 0x69, 0x74, 0x65, 0x61,
	0x12, 0x7f, 0x0a, 0x0b, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x65, 0x76, 0x4f, 0x70, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x43, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x65,
	0x76, 0x4f, 0x70, 0x73, 0x52, 0x0b, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x65, 0x76, 0x4f, 0x70,
	0x73, 0x12, 0x72, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x58, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64,
	0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x43, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c,
	0x6f, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x70, 0x0a,
	0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x54, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x76, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x5e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x43, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x85, 0x01, 0x0a, 0x0d, 0x61, 0x77, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x5f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x43, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x41, 0x57, 0x53, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x52, 0x0d, 0x61, 0x77, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x1a,
	0x39, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xda, 0x01, 0x0a, 0x21, 0x53,
	0x43, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x41, 0x57, 0x53, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x12, 0x67, 0x0a, 0x0a, 0x74, 0x61, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f,
	0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x74,
	0x61, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x22, 0x8c, 0x02, 0x0a, 0x1f, 0x53, 0x43, 0x4d, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x65, 0x76, 0x4f, 0x70, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70,
	0x69, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x6f, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f,
	0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x52, 0x65, 0x66, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x22, 0xdc, 0x01, 0x0a, 0x1d, 0x53, 0x43, 0x4d, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x42,
	0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x6f, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x66, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x22, 0xe0, 0x03, 0x0a, 0x23, 0x53, 0x43, 0x4d, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x69,
	0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x74, 0x0a, 0x09, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x41, 0x75, 0x74, 0x68, 0x42, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65,
	0x73, 0x12, 0x74, 0x0a, 0x0b, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x42, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0b, 0x62, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x12, 0x63, 0x0a, 0x05, 0x63, 0x61, 0x52, 0x65, 0x66, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64,
	0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x66, 0x52, 0x05, 0x63, 0x61, 0x52, 0x65, 0x66, 0x22, 0xd2, 0x01, 0x0a, 0x1a, 0x53, 0x43, 0x4d,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x73, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x44, 0x6f, 0x4e, 0x6f, 0x74, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x74, 0x68,
	0x73, 0x44, 0x6f, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x22, 0xe6, 0x01,
	0x0a, 0x19, 0x53, 0x43, 0x4d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x47, 0x69, 0x74, 0x65, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x61, 0x70, 0x69, 0x12, 0x63, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x52, 0x08,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61,
	0x6c, 0x6c, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x22, 0xff, 0x01, 0x0a, 0x1a, 0x53, 0x43, 0x4d, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x47,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x63, 0x0a, 0x08, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66,
	0x12, 0x24, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c, 0x6c,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x22, 0xc4, 0x03, 0x0a, 0x1a, 0x53, 0x43, 0x4d,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x47, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2a, 0x0a,
	0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x75, 0x62, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x53, 0x75, 0x62, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x63, 0x0a, 0x08, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12, 0x34,
	0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x63, 0x0a, 0x05, 0x63, 0x61,
	0x52, 0x65, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d,
	0x61, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x66, 0x52, 0x05, 0x63, 0x61, 0x52, 0x65, 0x66, 0x22,
	0x3d, 0x0a, 0x09, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x24,
	0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b,
	0x65, 0x79, 0x49, 0x44, 0x22, 0xee, 0x04, 0x0a, 0x0d, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x79, 0x52,
	0x75, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e,
	0x12, 0x6e, 0x0a, 0x0c, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x52, 0x0c, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x12, 0x71, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63,
	0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x67, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63,
	0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x79,
	0x6e, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x69, 0x0a, 0x07,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x73, 0x0a, 0x15, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0xa4, 0x04, 0x0a, 0x13, 0x53,
	0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x6a, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x67, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f,
	0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x92, 0x01, 0x0a,
	0x18, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x56, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x18, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x97, 0x03, 0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x6f, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63,
	0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x52, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x61, 0x0a, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64,
	0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52,
	0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x12, 0x92, 0x01, 0x0a, 0x18, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x18, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x13, 0x53,
	0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x66,
	0x48, 0x65, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x66,
	0x48, 0x65, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0xc8, 0x01, 0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x68, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x64, 0x54, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x64, 0x54, 0x6f, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x72, 0x65, 0x64, 0x54, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xd9, 0x01, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x12, 0x65, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x62, 0x0a, 0x04, 0x68, 0x6f, 0x6f, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x68, 0x6f, 0x6f, 0x6b, 0x22, 0x29, 0x0a, 0x11, 0x53,
	0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x7d, 0x0a, 0x11, 0x73,
	0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2e, 0x61, 0x72, 0x67,
	0x6f, 0x5f, 0x63, 0x64, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x11, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x22, 0xf4, 0x01, 0x0a, 0x0a, 0x53,
	0x79, 0x6e, 0x63, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x53,
	0x79, 0x6e, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x75, 0x61,
	0x6c, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e,
	0x65, 0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x54, 0x4c, 0x53, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x6b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x61, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x33, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2f, 0x61, 0x72, 0x67, 0x6f,
	0x2d, 0x63, 0x64, 0x2f, 0x76, 0x32, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescOnce sync.Once
	file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescData = file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDesc
)

func file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescGZIP() []byte {
	file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescOnce.Do(func() {
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescData)
	})
	return file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDescData
}

var file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes = make([]protoimpl.MessageInfo, 176)
var file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_goTypes = []any{
	(*AWSAuthConfig)(nil),                           // 0: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AWSAuthConfig
	(*AppProject)(nil),                              // 1: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProject
	(*AppProjectList)(nil),                          // 2: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectList
	(*AppProjectSpec)(nil),                          // 3: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectSpec
	(*AppProjectStatus)(nil),                        // 4: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectStatus
	(*Application)(nil),                             // 5: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Application
	(*ApplicationCondition)(nil),                    // 6: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationCondition
	(*ApplicationDestination)(nil),                  // 7: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationDestination
	(*ApplicationDestinationServiceAccount)(nil),    // 8: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationDestinationServiceAccount
	(*ApplicationList)(nil),                         // 9: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationList
	(*ApplicationMatchExpression)(nil),              // 10: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationMatchExpression
	(*ApplicationPreservedFields)(nil),              // 11: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationPreservedFields
	(*ApplicationSet)(nil),                          // 12: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSet
	(*ApplicationSetApplicationStatus)(nil),         // 13: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetApplicationStatus
	(*ApplicationSetCondition)(nil),                 // 14: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetCondition
	(*ApplicationSetGenerator)(nil),                 // 15: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetGenerator
	(*ApplicationSetList)(nil),                      // 16: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetList
	(*ApplicationSetNestedGenerator)(nil),           // 17: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetNestedGenerator
	(*ApplicationSetResourceIgnoreDifferences)(nil), // 18: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetResourceIgnoreDifferences
	(*ApplicationSetRolloutStep)(nil),               // 19: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetRolloutStep
	(*ApplicationSetRolloutStrategy)(nil),           // 20: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetRolloutStrategy
	(*ApplicationSetSpec)(nil),                      // 21: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetSpec
	(*ApplicationSetStatus)(nil),                    // 22: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetStatus
	(*ApplicationSetStrategy)(nil),                  // 23: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetStrategy
	(*ApplicationSetSyncPolicy)(nil),                // 24: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetSyncPolicy
	(*ApplicationSetTemplate)(nil),                  // 25: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplate
	(*ApplicationSetTemplateMeta)(nil),              // 26: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplateMeta
	(*ApplicationSetTerminalGenerator)(nil),         // 27: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTerminalGenerator
	(*ApplicationSetTree)(nil),                      // 28: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTree
	(*ApplicationSource)(nil),                       // 29: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSource
	(*ApplicationSourceDirectory)(nil),              // 30: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceDirectory
	(*ApplicationSourceHelm)(nil),                   // 31: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceHelm
	(*ApplicationSourceJsonnet)(nil),                // 32: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceJsonnet
	(*ApplicationSourceKustomize)(nil),              // 33: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceKustomize
	(*ApplicationSourcePlugin)(nil),                 // 34: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourcePlugin
	(*ApplicationSourcePluginParameter)(nil),        // 35: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourcePluginParameter
	(*ApplicationSpec)(nil),                         // 36: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSpec
	(*ApplicationStatus)(nil),                       // 37: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationStatus
	(*ApplicationSummary)(nil),                      // 38: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSummary
	(*ApplicationTree)(nil),                         // 39: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationTree
	(*ApplicationWatchEvent)(nil),                   // 40: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationWatchEvent
	(*Backoff)(nil),                                 // 41: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Backoff
	(*BasicAuthBitbucketServer)(nil),                // 42: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.BasicAuthBitbucketServer
	(*BearerTokenBitbucket)(nil),                    // 43: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.BearerTokenBitbucket
	(*BearerTokenBitbucketCloud)(nil),               // 44: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.BearerTokenBitbucketCloud
	(*ChartDetails)(nil),                            // 45: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ChartDetails
	(*Cluster)(nil),                                 // 46: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Cluster
	(*ClusterCacheInfo)(nil),                        // 47: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterCacheInfo
	(*ClusterConfig)(nil),                           // 48: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterConfig
	(*ClusterGenerator)(nil),                        // 49: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterGenerator
	(*ClusterInfo)(nil),                             // 50: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterInfo
	(*ClusterList)(nil),                             // 51: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterList
	(*Command)(nil),                                 // 52: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Command
	(*ComparedTo)(nil),                              // 53: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ComparedTo
	(*ComponentParameter)(nil),                      // 54: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ComponentParameter
	(*ConfigManagementPlugin)(nil),                  // 55: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ConfigManagementPlugin
	(*ConfigMapKeyRef)(nil),                         // 56: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ConfigMapKeyRef
	(*ConnectionState)(nil),                         // 57: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ConnectionState
	(*DuckTypeGenerator)(nil),                       // 58: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.DuckTypeGenerator
	(*EnvEntry)(nil),                                // 59: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.EnvEntry
	(*ErrApplicationNotAllowedToUseProject)(nil),    // 60: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ErrApplicationNotAllowedToUseProject
	(*ExecProviderConfig)(nil),                      // 61: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ExecProviderConfig
	(*GitDirectoryGeneratorItem)(nil),               // 62: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GitDirectoryGeneratorItem
	(*GitFileGeneratorItem)(nil),                    // 63: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GitFileGeneratorItem
	(*GitGenerator)(nil),                            // 64: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GitGenerator
	(*GnuPGPublicKey)(nil),                          // 65: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GnuPGPublicKey
	(*GnuPGPublicKeyList)(nil),                      // 66: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GnuPGPublicKeyList
	(*HealthStatus)(nil),                            // 67: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.HealthStatus
	(*HelmFileParameter)(nil),                       // 68: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.HelmFileParameter
	(*HelmOptions)(nil),                             // 69: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.HelmOptions
	(*HelmParameter)(nil),                           // 70: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.HelmParameter
	(*HostInfo)(nil),                                // 71: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.HostInfo
	(*HostResourceInfo)(nil),                        // 72: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.HostResourceInfo
	(*Info)(nil),                                    // 73: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Info
	(*InfoItem)(nil),                                // 74: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.InfoItem
	(*JWTToken)(nil),                                // 75: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.JWTToken
	(*JWTTokens)(nil),                               // 76: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.JWTTokens
	(*JsonnetVar)(nil),                              // 77: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.JsonnetVar
	(*KnownTypeField)(nil),                          // 78: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KnownTypeField
	(*KustomizeGvk)(nil),                            // 79: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KustomizeGvk
	(*KustomizeOptions)(nil),                        // 80: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KustomizeOptions
	(*KustomizePatch)(nil),                          // 81: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KustomizePatch
	(*KustomizeReplica)(nil),                        // 82: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KustomizeReplica
	(*KustomizeResId)(nil),                          // 83: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KustomizeResId
	(*KustomizeSelector)(nil),                       // 84: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KustomizeSelector
	(*ListGenerator)(nil),                           // 85: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ListGenerator
	(*ManagedNamespaceMetadata)(nil),                // 86: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ManagedNamespaceMetadata
	(*MatrixGenerator)(nil),                         // 87: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.MatrixGenerator
	(*MergeGenerator)(nil),                          // 88: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.MergeGenerator
	(*NestedMatrixGenerator)(nil),                   // 89: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.NestedMatrixGenerator
	(*NestedMergeGenerator)(nil),                    // 90: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.NestedMergeGenerator
	(*Operation)(nil),                               // 91: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Operation
	(*OperationInitiator)(nil),                      // 92: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OperationInitiator
	(*OperationState)(nil),                          // 93: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OperationState
	(*OptionalArray)(nil),                           // 94: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OptionalArray
	(*OptionalMap)(nil),                             // 95: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OptionalMap
	(*OrphanedResourceKey)(nil),                     // 96: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OrphanedResourceKey
	(*OrphanedResourcesMonitorSettings)(nil),        // 97: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OrphanedResourcesMonitorSettings
	(*OverrideIgnoreDiff)(nil),                      // 98: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OverrideIgnoreDiff
	(*PluginConfigMapRef)(nil),                      // 99: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PluginConfigMapRef
	(*PluginGenerator)(nil),                         // 100: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PluginGenerator
	(*PluginInput)(nil),                             // 101: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PluginInput
	(*ProjectRole)(nil),                             // 102: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ProjectRole
	(*PullRequestGenerator)(nil),                    // 103: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGenerator
	(*PullRequestGeneratorAzureDevOps)(nil),         // 104: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorAzureDevOps
	(*PullRequestGeneratorBitbucket)(nil),           // 105: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorBitbucket
	(*PullRequestGeneratorBitbucketServer)(nil),     // 106: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorBitbucketServer
	(*PullRequestGeneratorFilter)(nil),              // 107: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorFilter
	(*PullRequestGeneratorGitLab)(nil),              // 108: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorGitLab
	(*PullRequestGeneratorGitea)(nil),               // 109: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorGitea
	(*PullRequestGeneratorGithub)(nil),              // 110: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorGithub
	(*RefTarget)(nil),                               // 111: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RefTarget
	(*RepoCreds)(nil),                               // 112: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RepoCreds
	(*RepoCredsList)(nil),                           // 113: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RepoCredsList
	(*Repository)(nil),                              // 114: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Repository
	(*RepositoryCertificate)(nil),                   // 115: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RepositoryCertificate
	(*RepositoryCertificateList)(nil),               // 116: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RepositoryCertificateList
	(*RepositoryList)(nil),                          // 117: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RepositoryList
	(*ResourceAction)(nil),                          // 118: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceAction
	(*ResourceActionDefinition)(nil),                // 119: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceActionDefinition
	(*ResourceActionParam)(nil),                     // 120: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceActionParam
	(*ResourceActions)(nil),                         // 121: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceActions
	(*ResourceDiff)(nil),                            // 122: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceDiff
	(*ResourceIgnoreDifferences)(nil),               // 123: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceIgnoreDifferences
	(*ResourceNetworkingInfo)(nil),                  // 124: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNetworkingInfo
	(*ResourceNode)(nil),                            // 125: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNode
	(*ResourceOverride)(nil),                        // 126: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceOverride
	(*ResourceRef)(nil),                             // 127: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceRef
	(*ResourceResult)(nil),                          // 128: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceResult
	(*ResourceStatus)(nil),                          // 129: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceStatus
	(*RetryStrategy)(nil),                           // 130: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RetryStrategy
	(*RevisionHistory)(nil),                         // 131: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RevisionHistory
	(*RevisionMetadata)(nil),                        // 132: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RevisionMetadata
	(*SCMProviderGenerator)(nil),                    // 133: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGenerator
	(*SCMProviderGeneratorAWSCodeCommit)(nil),       // 134: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorAWSCodeCommit
	(*SCMProviderGeneratorAzureDevOps)(nil),         // 135: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorAzureDevOps
	(*SCMProviderGeneratorBitbucket)(nil),           // 136: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorBitbucket
	(*SCMProviderGeneratorBitbucketServer)(nil),     // 137: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorBitbucketServer
	(*SCMProviderGeneratorFilter)(nil),              // 138: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorFilter
	(*SCMProviderGeneratorGitea)(nil),               // 139: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorGitea
	(*SCMProviderGeneratorGithub)(nil),              // 140: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorGithub
	(*SCMProviderGeneratorGitlab)(nil),              // 141: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorGitlab
	(*SecretRef)(nil),                               // 142: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SecretRef
	(*SignatureKey)(nil),                            // 143: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SignatureKey
	(*SyncOperation)(nil),                           // 144: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncOperation
	(*SyncOperationResource)(nil),                   // 145: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncOperationResource
	(*SyncOperationResult)(nil),                     // 146: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncOperationResult
	(*SyncPolicy)(nil),                              // 147: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncPolicy
	(*SyncPolicyAutomated)(nil),                     // 148: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncPolicyAutomated
	(*SyncStatus)(nil),                              // 149: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncStatus
	(*SyncStrategy)(nil),                            // 150: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncStrategy
	(*SyncStrategyApply)(nil),                       // 151: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncStrategyApply
	(*SyncStrategyHook)(nil),                        // 152: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncStrategyHook
	(*SyncWindow)(nil),                              // 153: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncWindow
	(*TLSClientConfig)(nil),                         // 154: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.TLSClientConfig
	(*TagFilter)(nil),                               // 155: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.TagFilter
	nil,                                             // 156: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectStatus.JwtTokensByRoleEntry
	nil,                                             // 157: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplateMeta.LabelsEntry
	nil,                                             // 158: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplateMeta.AnnotationsEntry
	nil,                                             // 159: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceKustomize.CommonLabelsEntry
	nil,                                             // 160: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceKustomize.CommonAnnotationsEntry
	nil,                                             // 161: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Cluster.LabelsEntry
	nil,                                             // 162: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Cluster.AnnotationsEntry
	nil,                                             // 163: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterGenerator.ValuesEntry
	nil,                                             // 164: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.DuckTypeGenerator.ValuesEntry
	nil,                                             // 165: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ExecProviderConfig.EnvEntry
	nil,                                             // 166: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GitGenerator.ValuesEntry
	nil,                                             // 167: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KustomizePatch.OptionsEntry
	nil,                                             // 168: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ManagedNamespaceMetadata.LabelsEntry
	nil,                                             // 169: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ManagedNamespaceMetadata.AnnotationsEntry
	nil,                                             // 170: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OptionalMap.MapEntry
	nil,                                             // 171: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PluginGenerator.ValuesEntry
	nil,                                             // 172: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PluginInput.ParametersEntry
	nil,                                             // 173: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNetworkingInfo.TargetLabelsEntry
	nil,                                             // 174: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNetworkingInfo.LabelsEntry
	nil,                                             // 175: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGenerator.ValuesEntry
	(*v1.ObjectMeta)(nil),                           // 176: k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta
	(*v1.ListMeta)(nil),                             // 177: k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	(*v1.GroupKind)(nil),                            // 178: k8s.io.apimachinery.pkg.apis.meta.v1.GroupKind
	(*v1.Time)(nil),                                 // 179: k8s.io.apimachinery.pkg.apis.meta.v1.Time
	(*v1.LabelSelector)(nil),                        // 180: k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector
	(*v11.JSON)(nil),                                // 181: k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.JSON
	(*intstr.IntOrString)(nil),                      // 182: k8s.io.apimachinery.pkg.util.intstr.IntOrString
	(*runtime.RawExtension)(nil),                    // 183: k8s.io.apimachinery.pkg.runtime.RawExtension
	(*v12.NodeSystemInfo)(nil),                      // 184: k8s.io.api.core.v1.NodeSystemInfo
	(*v12.LoadBalancerIngress)(nil),                 // 185: k8s.io.api.core.v1.LoadBalancerIngress
}
var file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_depIdxs = []int32{
	176, // 0: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProject.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta
	3,   // 1: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProject.spec:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectSpec
	4,   // 2: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProject.status:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectStatus
	177, // 3: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectList.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	1,   // 4: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectList.items:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProject
	7,   // 5: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectSpec.destinations:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationDestination
	102, // 6: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectSpec.roles:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ProjectRole
	178, // 7: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectSpec.clusterResourceWhitelist:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.GroupKind
	178, // 8: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectSpec.namespaceResourceBlacklist:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.GroupKind
	97,  // 9: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectSpec.orphanedResources:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OrphanedResourcesMonitorSettings
	153, // 10: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectSpec.syncWindows:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncWindow
	178, // 11: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectSpec.namespaceResourceWhitelist:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.GroupKind
	143, // 12: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectSpec.signatureKeys:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SignatureKey
	178, // 13: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectSpec.clusterResourceBlacklist:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.GroupKind
	8,   // 14: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectSpec.destinationServiceAccounts:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationDestinationServiceAccount
	156, // 15: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectStatus.jwtTokensByRole:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectStatus.JwtTokensByRoleEntry
	176, // 16: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Application.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta
	36,  // 17: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Application.spec:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSpec
	37,  // 18: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Application.status:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationStatus
	91,  // 19: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Application.operation:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Operation
	179, // 20: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationCondition.lastTransitionTime:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	177, // 21: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationList.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	5,   // 22: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationList.items:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Application
	176, // 23: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSet.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta
	21,  // 24: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSet.spec:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetSpec
	22,  // 25: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSet.status:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetStatus
	179, // 26: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetApplicationStatus.lastTransitionTime:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	179, // 27: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetCondition.lastTransitionTime:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	85,  // 28: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetGenerator.list:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ListGenerator
	49,  // 29: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetGenerator.clusters:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterGenerator
	64,  // 30: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetGenerator.git:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GitGenerator
	133, // 31: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetGenerator.scmProvider:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGenerator
	58,  // 32: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetGenerator.clusterDecisionResource:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.DuckTypeGenerator
	103, // 33: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetGenerator.pullRequest:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGenerator
	87,  // 34: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetGenerator.matrix:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.MatrixGenerator
	88,  // 35: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetGenerator.merge:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.MergeGenerator
	180, // 36: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetGenerator.selector:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector
	100, // 37: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetGenerator.plugin:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PluginGenerator
	177, // 38: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetList.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	12,  // 39: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetList.items:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSet
	85,  // 40: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetNestedGenerator.list:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ListGenerator
	49,  // 41: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetNestedGenerator.clusters:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterGenerator
	64,  // 42: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetNestedGenerator.git:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GitGenerator
	133, // 43: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetNestedGenerator.scmProvider:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGenerator
	58,  // 44: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetNestedGenerator.clusterDecisionResource:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.DuckTypeGenerator
	103, // 45: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetNestedGenerator.pullRequest:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGenerator
	181, // 46: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetNestedGenerator.matrix:type_name -> k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.JSON
	181, // 47: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetNestedGenerator.merge:type_name -> k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.JSON
	180, // 48: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetNestedGenerator.selector:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector
	100, // 49: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetNestedGenerator.plugin:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PluginGenerator
	10,  // 50: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetRolloutStep.matchExpressions:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationMatchExpression
	182, // 51: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetRolloutStep.maxUpdate:type_name -> k8s.io.apimachinery.pkg.util.intstr.IntOrString
	19,  // 52: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetRolloutStrategy.steps:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetRolloutStep
	15,  // 53: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetSpec.generators:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetGenerator
	25,  // 54: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetSpec.template:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplate
	24,  // 55: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetSpec.syncPolicy:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetSyncPolicy
	23,  // 56: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetSpec.strategy:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetStrategy
	11,  // 57: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetSpec.preservedFields:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationPreservedFields
	18,  // 58: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetSpec.ignoreApplicationDifferences:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetResourceIgnoreDifferences
	14,  // 59: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetStatus.conditions:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetCondition
	13,  // 60: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetStatus.applicationStatus:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetApplicationStatus
	129, // 61: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetStatus.resources:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceStatus
	20,  // 62: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetStrategy.rollingSync:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetRolloutStrategy
	26,  // 63: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplate.metadata:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplateMeta
	36,  // 64: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplate.spec:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSpec
	157, // 65: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplateMeta.labels:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplateMeta.LabelsEntry
	158, // 66: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplateMeta.annotations:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplateMeta.AnnotationsEntry
	85,  // 67: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTerminalGenerator.list:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ListGenerator
	49,  // 68: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTerminalGenerator.clusters:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterGenerator
	64,  // 69: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTerminalGenerator.git:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GitGenerator
	133, // 70: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTerminalGenerator.scmProvider:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGenerator
	58,  // 71: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTerminalGenerator.clusterDecisionResource:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.DuckTypeGenerator
	103, // 72: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTerminalGenerator.pullRequest:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGenerator
	100, // 73: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTerminalGenerator.plugin:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PluginGenerator
	180, // 74: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTerminalGenerator.selector:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector
	125, // 75: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTree.nodes:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNode
	31,  // 76: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSource.helm:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceHelm
	33,  // 77: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSource.kustomize:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceKustomize
	30,  // 78: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSource.directory:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceDirectory
	34,  // 79: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSource.plugin:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourcePlugin
	32,  // 80: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceDirectory.jsonnet:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceJsonnet
	70,  // 81: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceHelm.parameters:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.HelmParameter
	68,  // 82: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceHelm.fileParameters:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.HelmFileParameter
	183, // 83: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceHelm.valuesObject:type_name -> k8s.io.apimachinery.pkg.runtime.RawExtension
	77,  // 84: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceJsonnet.extVars:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.JsonnetVar
	77,  // 85: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceJsonnet.tlas:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.JsonnetVar
	159, // 86: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceKustomize.commonLabels:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceKustomize.CommonLabelsEntry
	160, // 87: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceKustomize.commonAnnotations:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceKustomize.CommonAnnotationsEntry
	82,  // 88: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceKustomize.replicas:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KustomizeReplica
	81,  // 89: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourceKustomize.patches:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KustomizePatch
	59,  // 90: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourcePlugin.env:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.EnvEntry
	35,  // 91: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourcePlugin.parameters:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourcePluginParameter
	95,  // 92: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourcePluginParameter.map:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OptionalMap
	94,  // 93: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSourcePluginParameter.array:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OptionalArray
	29,  // 94: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSpec.source:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSource
	7,   // 95: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSpec.destination:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationDestination
	147, // 96: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSpec.syncPolicy:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncPolicy
	123, // 97: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSpec.ignoreDifferences:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceIgnoreDifferences
	73,  // 98: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSpec.info:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Info
	29,  // 99: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSpec.sources:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSource
	129, // 100: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationStatus.resources:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceStatus
	149, // 101: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationStatus.sync:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncStatus
	67,  // 102: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationStatus.health:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.HealthStatus
	131, // 103: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationStatus.history:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RevisionHistory
	6,   // 104: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationStatus.conditions:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationCondition
	179, // 105: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationStatus.reconciledAt:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	93,  // 106: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationStatus.operationState:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OperationState
	179, // 107: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationStatus.observedAt:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	38,  // 108: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationStatus.summary:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSummary
	125, // 109: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationTree.nodes:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNode
	125, // 110: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationTree.orphanedNodes:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNode
	71,  // 111: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationTree.hosts:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.HostInfo
	5,   // 112: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationWatchEvent.application:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Application
	142, // 113: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.BasicAuthBitbucketServer.passwordRef:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SecretRef
	142, // 114: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.BearerTokenBitbucket.tokenRef:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SecretRef
	142, // 115: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.BearerTokenBitbucketCloud.tokenRef:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SecretRef
	48,  // 116: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Cluster.config:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterConfig
	57,  // 117: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Cluster.connectionState:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ConnectionState
	179, // 118: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Cluster.refreshRequestedAt:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	50,  // 119: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Cluster.info:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterInfo
	161, // 120: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Cluster.labels:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Cluster.LabelsEntry
	162, // 121: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Cluster.annotations:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Cluster.AnnotationsEntry
	179, // 122: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterCacheInfo.lastCacheSyncTime:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	154, // 123: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterConfig.tlsClientConfig:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.TLSClientConfig
	0,   // 124: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterConfig.awsAuthConfig:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AWSAuthConfig
	61,  // 125: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterConfig.execProviderConfig:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ExecProviderConfig
	180, // 126: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterGenerator.selector:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector
	25,  // 127: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterGenerator.template:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplate
	163, // 128: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterGenerator.values:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterGenerator.ValuesEntry
	57,  // 129: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterInfo.connectionState:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ConnectionState
	47,  // 130: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterInfo.cacheInfo:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterCacheInfo
	177, // 131: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterList.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	46,  // 132: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ClusterList.items:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Cluster
	29,  // 133: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ComparedTo.source:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSource
	7,   // 134: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ComparedTo.destination:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationDestination
	29,  // 135: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ComparedTo.sources:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSource
	123, // 136: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ComparedTo.ignoreDifferences:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceIgnoreDifferences
	52,  // 137: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ConfigManagementPlugin.init:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Command
	52,  // 138: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ConfigManagementPlugin.generate:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Command
	179, // 139: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ConnectionState.attemptedAt:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	180, // 140: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.DuckTypeGenerator.labelSelector:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector
	25,  // 141: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.DuckTypeGenerator.template:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplate
	164, // 142: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.DuckTypeGenerator.values:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.DuckTypeGenerator.ValuesEntry
	165, // 143: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ExecProviderConfig.env:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ExecProviderConfig.EnvEntry
	62,  // 144: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GitGenerator.directories:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GitDirectoryGeneratorItem
	63,  // 145: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GitGenerator.files:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GitFileGeneratorItem
	25,  // 146: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GitGenerator.template:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplate
	166, // 147: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GitGenerator.values:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GitGenerator.ValuesEntry
	177, // 148: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GnuPGPublicKeyList.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	65,  // 149: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GnuPGPublicKeyList.items:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.GnuPGPublicKey
	72,  // 150: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.HostInfo.resourcesInfo:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.HostResourceInfo
	184, // 151: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.HostInfo.systemInfo:type_name -> k8s.io.api.core.v1.NodeSystemInfo
	75,  // 152: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.JWTTokens.items:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.JWTToken
	84,  // 153: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KustomizePatch.target:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KustomizeSelector
	167, // 154: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KustomizePatch.options:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KustomizePatch.OptionsEntry
	182, // 155: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KustomizeReplica.count:type_name -> k8s.io.apimachinery.pkg.util.intstr.IntOrString
	79,  // 156: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KustomizeResId.gvk:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KustomizeGvk
	83,  // 157: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KustomizeSelector.resId:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KustomizeResId
	181, // 158: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ListGenerator.elements:type_name -> k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.JSON
	25,  // 159: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ListGenerator.template:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplate
	168, // 160: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ManagedNamespaceMetadata.labels:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ManagedNamespaceMetadata.LabelsEntry
	169, // 161: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ManagedNamespaceMetadata.annotations:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ManagedNamespaceMetadata.AnnotationsEntry
	17,  // 162: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.MatrixGenerator.generators:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetNestedGenerator
	25,  // 163: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.MatrixGenerator.template:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplate
	17,  // 164: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.MergeGenerator.generators:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetNestedGenerator
	25,  // 165: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.MergeGenerator.template:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplate
	27,  // 166: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.NestedMatrixGenerator.generators:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTerminalGenerator
	27,  // 167: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.NestedMergeGenerator.generators:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTerminalGenerator
	144, // 168: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Operation.sync:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncOperation
	92,  // 169: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Operation.initiatedBy:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OperationInitiator
	73,  // 170: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Operation.info:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Info
	130, // 171: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Operation.retry:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RetryStrategy
	91,  // 172: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OperationState.operation:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Operation
	146, // 173: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OperationState.syncResult:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncOperationResult
	179, // 174: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OperationState.startedAt:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	179, // 175: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OperationState.finishedAt:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	170, // 176: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OptionalMap.map:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OptionalMap.MapEntry
	96,  // 177: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OrphanedResourcesMonitorSettings.ignore:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OrphanedResourceKey
	99,  // 178: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PluginGenerator.configMapRef:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PluginConfigMapRef
	101, // 179: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PluginGenerator.input:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PluginInput
	25,  // 180: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PluginGenerator.template:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplate
	171, // 181: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PluginGenerator.values:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PluginGenerator.ValuesEntry
	172, // 182: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PluginInput.parameters:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PluginInput.ParametersEntry
	75,  // 183: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ProjectRole.jwtTokens:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.JWTToken
	110, // 184: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGenerator.github:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorGithub
	108, // 185: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGenerator.gitlab:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorGitLab
	109, // 186: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGenerator.gitea:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorGitea
	106, // 187: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGenerator.bitbucketServer:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorBitbucketServer
	107, // 188: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGenerator.filters:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorFilter
	25,  // 189: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGenerator.template:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplate
	105, // 190: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGenerator.bitbucket:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorBitbucket
	104, // 191: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGenerator.azuredevops:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorAzureDevOps
	142, // 192: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorAzureDevOps.tokenRef:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SecretRef
	42,  // 193: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorBitbucket.basicAuth:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.BasicAuthBitbucketServer
	44,  // 194: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorBitbucket.bearerToken:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.BearerTokenBitbucketCloud
	42,  // 195: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorBitbucketServer.basicAuth:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.BasicAuthBitbucketServer
	43,  // 196: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorBitbucketServer.bearerToken:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.BearerTokenBitbucket
	56,  // 197: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorBitbucketServer.caRef:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ConfigMapKeyRef
	142, // 198: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorGitLab.tokenRef:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SecretRef
	56,  // 199: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorGitLab.caRef:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ConfigMapKeyRef
	142, // 200: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorGitea.tokenRef:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SecretRef
	142, // 201: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PullRequestGeneratorGithub.tokenRef:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SecretRef
	114, // 202: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RefTarget.repo:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Repository
	177, // 203: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RepoCredsList.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	112, // 204: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RepoCredsList.items:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RepoCreds
	57,  // 205: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Repository.connectionState:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ConnectionState
	177, // 206: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RepositoryCertificateList.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	115, // 207: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RepositoryCertificateList.items:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RepositoryCertificate
	177, // 208: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RepositoryList.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	114, // 209: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RepositoryList.items:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Repository
	120, // 210: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceAction.params:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceActionParam
	119, // 211: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceActions.definitions:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceActionDefinition
	173, // 212: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNetworkingInfo.targetLabels:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNetworkingInfo.TargetLabelsEntry
	127, // 213: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNetworkingInfo.targetRefs:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceRef
	174, // 214: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNetworkingInfo.labels:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNetworkingInfo.LabelsEntry
	185, // 215: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNetworkingInfo.ingress:type_name -> k8s.io.api.core.v1.LoadBalancerIngress
	127, // 216: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNode.resourceRef:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceRef
	127, // 217: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNode.parentRefs:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceRef
	74,  // 218: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNode.info:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.InfoItem
	124, // 219: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNode.networkingInfo:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNetworkingInfo
	67,  // 220: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNode.health:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.HealthStatus
	179, // 221: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceNode.createdAt:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	98,  // 222: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceOverride.ignoreDifferences:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OverrideIgnoreDiff
	98,  // 223: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceOverride.ignoreResourceUpdates:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OverrideIgnoreDiff
	78,  // 224: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceOverride.knownTypeFields:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.KnownTypeField
	67,  // 225: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceStatus.health:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.HealthStatus
	41,  // 226: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RetryStrategy.backoff:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.Backoff
	179, // 227: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RevisionHistory.deployedAt:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	29,  // 228: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RevisionHistory.source:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSource
	179, // 229: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RevisionHistory.deployStartedAt:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	29,  // 230: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RevisionHistory.sources:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSource
	92,  // 231: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RevisionHistory.initiatedBy:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.OperationInitiator
	179, // 232: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RevisionMetadata.date:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	140, // 233: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGenerator.github:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorGithub
	141, // 234: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGenerator.gitlab:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorGitlab
	136, // 235: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGenerator.bitbucket:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorBitbucket
	137, // 236: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGenerator.bitbucketServer:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorBitbucketServer
	139, // 237: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGenerator.gitea:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorGitea
	135, // 238: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGenerator.azureDevOps:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorAzureDevOps
	138, // 239: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGenerator.filters:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorFilter
	25,  // 240: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGenerator.template:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSetTemplate
	175, // 241: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGenerator.values:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGenerator.ValuesEntry
	134, // 242: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGenerator.awsCodeCommit:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorAWSCodeCommit
	155, // 243: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorAWSCodeCommit.tagFilters:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.TagFilter
	142, // 244: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorAzureDevOps.accessTokenRef:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SecretRef
	142, // 245: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorBitbucket.appPasswordRef:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SecretRef
	42,  // 246: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorBitbucketServer.basicAuth:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.BasicAuthBitbucketServer
	43,  // 247: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorBitbucketServer.bearerToken:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.BearerTokenBitbucket
	56,  // 248: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorBitbucketServer.caRef:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ConfigMapKeyRef
	142, // 249: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorGitea.tokenRef:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SecretRef
	142, // 250: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorGithub.tokenRef:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SecretRef
	142, // 251: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorGitlab.tokenRef:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SecretRef
	56,  // 252: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SCMProviderGeneratorGitlab.caRef:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ConfigMapKeyRef
	150, // 253: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncOperation.syncStrategy:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncStrategy
	145, // 254: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncOperation.resources:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncOperationResource
	29,  // 255: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncOperation.source:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSource
	29,  // 256: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncOperation.sources:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSource
	128, // 257: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncOperationResult.resources:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ResourceResult
	29,  // 258: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncOperationResult.source:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSource
	29,  // 259: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncOperationResult.sources:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ApplicationSource
	86,  // 260: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncOperationResult.managedNamespaceMetadata:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ManagedNamespaceMetadata
	148, // 261: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncPolicy.automated:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncPolicyAutomated
	130, // 262: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncPolicy.retry:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.RetryStrategy
	86,  // 263: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncPolicy.managedNamespaceMetadata:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ManagedNamespaceMetadata
	53,  // 264: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncStatus.comparedTo:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.ComparedTo
	151, // 265: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncStrategy.apply:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncStrategyApply
	152, // 266: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncStrategy.hook:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncStrategyHook
	151, // 267: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncStrategyHook.syncStrategyApply:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.SyncStrategyApply
	76,  // 268: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.AppProjectStatus.JwtTokensByRoleEntry.value:type_name -> github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.JWTTokens
	181, // 269: github.com.argoproj.argo_cd.v2.pkg.apis.application.v1alpha1.PluginInput.ParametersEntry.value:type_name -> k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.JSON
	270, // [270:270] is the sub-list for method output_type
	270, // [270:270] is the sub-list for method input_type
	270, // [270:270] is the sub-list for extension type_name
	270, // [270:270] is the sub-list for extension extendee
	0,   // [0:270] is the sub-list for field type_name
}

func init() { file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_init() }
func file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_init() {
	if File_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AWSAuthConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AppProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AppProjectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AppProjectSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*AppProjectStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Application); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationDestination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationDestinationServiceAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationMatchExpression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationPreservedFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSetApplicationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSetCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSetGenerator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSetNestedGenerator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSetResourceIgnoreDifferences); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSetRolloutStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSetRolloutStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSetSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSetStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSetStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSetSyncPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSetTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSetTemplateMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSetTerminalGenerator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSetTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSourceDirectory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSourceHelm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSourceJsonnet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSourceKustomize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSourcePlugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSourcePluginParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationWatchEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*Backoff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*BasicAuthBitbucketServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*BearerTokenBitbucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*BearerTokenBitbucketCloud); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*ChartDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*Cluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*ClusterCacheInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*ClusterConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*ClusterGenerator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*ClusterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*ClusterList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*ComparedTo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*ComponentParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*ConfigManagementPlugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*ConfigMapKeyRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*ConnectionState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*DuckTypeGenerator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*EnvEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*ErrApplicationNotAllowedToUseProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*ExecProviderConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*GitDirectoryGeneratorItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*GitFileGeneratorItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*GitGenerator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*GnuPGPublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*GnuPGPublicKeyList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*HealthStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*HelmFileParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*HelmOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*HelmParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*HostInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*HostResourceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*InfoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*JWTToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*JWTTokens); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*JsonnetVar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*KnownTypeField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*KustomizeGvk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*KustomizeOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*KustomizePatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*KustomizeReplica); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*KustomizeResId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*KustomizeSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*ListGenerator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[86].Exporter = func(v any, i int) any {
			switch v := v.(*ManagedNamespaceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[87].Exporter = func(v any, i int) any {
			switch v := v.(*MatrixGenerator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[88].Exporter = func(v any, i int) any {
			switch v := v.(*MergeGenerator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[89].Exporter = func(v any, i int) any {
			switch v := v.(*NestedMatrixGenerator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[90].Exporter = func(v any, i int) any {
			switch v := v.(*NestedMergeGenerator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[91].Exporter = func(v any, i int) any {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[92].Exporter = func(v any, i int) any {
			switch v := v.(*OperationInitiator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[93].Exporter = func(v any, i int) any {
			switch v := v.(*OperationState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[94].Exporter = func(v any, i int) any {
			switch v := v.(*OptionalArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[95].Exporter = func(v any, i int) any {
			switch v := v.(*OptionalMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[96].Exporter = func(v any, i int) any {
			switch v := v.(*OrphanedResourceKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[97].Exporter = func(v any, i int) any {
			switch v := v.(*OrphanedResourcesMonitorSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[98].Exporter = func(v any, i int) any {
			switch v := v.(*OverrideIgnoreDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[99].Exporter = func(v any, i int) any {
			switch v := v.(*PluginConfigMapRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[100].Exporter = func(v any, i int) any {
			switch v := v.(*PluginGenerator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[101].Exporter = func(v any, i int) any {
			switch v := v.(*PluginInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[102].Exporter = func(v any, i int) any {
			switch v := v.(*ProjectRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[103].Exporter = func(v any, i int) any {
			switch v := v.(*PullRequestGenerator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[104].Exporter = func(v any, i int) any {
			switch v := v.(*PullRequestGeneratorAzureDevOps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[105].Exporter = func(v any, i int) any {
			switch v := v.(*PullRequestGeneratorBitbucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[106].Exporter = func(v any, i int) any {
			switch v := v.(*PullRequestGeneratorBitbucketServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[107].Exporter = func(v any, i int) any {
			switch v := v.(*PullRequestGeneratorFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[108].Exporter = func(v any, i int) any {
			switch v := v.(*PullRequestGeneratorGitLab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[109].Exporter = func(v any, i int) any {
			switch v := v.(*PullRequestGeneratorGitea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[110].Exporter = func(v any, i int) any {
			switch v := v.(*PullRequestGeneratorGithub); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[111].Exporter = func(v any, i int) any {
			switch v := v.(*RefTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[112].Exporter = func(v any, i int) any {
			switch v := v.(*RepoCreds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[113].Exporter = func(v any, i int) any {
			switch v := v.(*RepoCredsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[114].Exporter = func(v any, i int) any {
			switch v := v.(*Repository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[115].Exporter = func(v any, i int) any {
			switch v := v.(*RepositoryCertificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[116].Exporter = func(v any, i int) any {
			switch v := v.(*RepositoryCertificateList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[117].Exporter = func(v any, i int) any {
			switch v := v.(*RepositoryList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[118].Exporter = func(v any, i int) any {
			switch v := v.(*ResourceAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[119].Exporter = func(v any, i int) any {
			switch v := v.(*ResourceActionDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[120].Exporter = func(v any, i int) any {
			switch v := v.(*ResourceActionParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[121].Exporter = func(v any, i int) any {
			switch v := v.(*ResourceActions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[122].Exporter = func(v any, i int) any {
			switch v := v.(*ResourceDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[123].Exporter = func(v any, i int) any {
			switch v := v.(*ResourceIgnoreDifferences); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[124].Exporter = func(v any, i int) any {
			switch v := v.(*ResourceNetworkingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[125].Exporter = func(v any, i int) any {
			switch v := v.(*ResourceNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[126].Exporter = func(v any, i int) any {
			switch v := v.(*ResourceOverride); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[127].Exporter = func(v any, i int) any {
			switch v := v.(*ResourceRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[128].Exporter = func(v any, i int) any {
			switch v := v.(*ResourceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[129].Exporter = func(v any, i int) any {
			switch v := v.(*ResourceStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[130].Exporter = func(v any, i int) any {
			switch v := v.(*RetryStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[131].Exporter = func(v any, i int) any {
			switch v := v.(*RevisionHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[132].Exporter = func(v any, i int) any {
			switch v := v.(*RevisionMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[133].Exporter = func(v any, i int) any {
			switch v := v.(*SCMProviderGenerator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[134].Exporter = func(v any, i int) any {
			switch v := v.(*SCMProviderGeneratorAWSCodeCommit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[135].Exporter = func(v any, i int) any {
			switch v := v.(*SCMProviderGeneratorAzureDevOps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[136].Exporter = func(v any, i int) any {
			switch v := v.(*SCMProviderGeneratorBitbucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[137].Exporter = func(v any, i int) any {
			switch v := v.(*SCMProviderGeneratorBitbucketServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[138].Exporter = func(v any, i int) any {
			switch v := v.(*SCMProviderGeneratorFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[139].Exporter = func(v any, i int) any {
			switch v := v.(*SCMProviderGeneratorGitea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[140].Exporter = func(v any, i int) any {
			switch v := v.(*SCMProviderGeneratorGithub); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[141].Exporter = func(v any, i int) any {
			switch v := v.(*SCMProviderGeneratorGitlab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[142].Exporter = func(v any, i int) any {
			switch v := v.(*SecretRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[143].Exporter = func(v any, i int) any {
			switch v := v.(*SignatureKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[144].Exporter = func(v any, i int) any {
			switch v := v.(*SyncOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[145].Exporter = func(v any, i int) any {
			switch v := v.(*SyncOperationResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[146].Exporter = func(v any, i int) any {
			switch v := v.(*SyncOperationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[147].Exporter = func(v any, i int) any {
			switch v := v.(*SyncPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[148].Exporter = func(v any, i int) any {
			switch v := v.(*SyncPolicyAutomated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[149].Exporter = func(v any, i int) any {
			switch v := v.(*SyncStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[150].Exporter = func(v any, i int) any {
			switch v := v.(*SyncStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[151].Exporter = func(v any, i int) any {
			switch v := v.(*SyncStrategyApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[152].Exporter = func(v any, i int) any {
			switch v := v.(*SyncStrategyHook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[153].Exporter = func(v any, i int) any {
			switch v := v.(*SyncWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[154].Exporter = func(v any, i int) any {
			switch v := v.(*TLSClientConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes[155].Exporter = func(v any, i int) any {
			switch v := v.(*TagFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   176,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_goTypes,
		DependencyIndexes: file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_depIdxs,
		MessageInfos:      file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_msgTypes,
	}.Build()
	File_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto = out.File
	file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_rawDesc = nil
	file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_goTypes = nil
	file_github_com_argoproj_argo_cd_v2_pkg_apis_application_v1alpha1_generated_proto_depIdxs = nil
}
